services:
  neo4j:
    image: neo4j:5.18.0-enterprise
    container_name: codestory-neo4j-test
    ports:
      - "7475:7474"  # HTTP - using different port to avoid conflicts
      - "7688:7687"  # Bolt - using different port to avoid conflicts
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_initial_dbms_default__database=testdb
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes  # Required for enterprise edition
    volumes:
      - neo4j_test_data:/data
      - neo4j_test_logs:/logs
      - ./tests/fixtures/cypher:/import  # Mount fixtures directory for data import
    healthcheck:
      test: "wget -O /dev/null -q http://localhost:7474 || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: on-failure

  redis:
    image: redis:7.2.4-alpine
    container_name: codestory-redis-test
    ports:
      - "6380:6379"  # Using different port to avoid conflicts
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 5s
    restart: on-failure

volumes:
  neo4j_test_data:
    name: codestory-neo4j-test-data
  neo4j_test_logs:
    name: codestory-neo4j-test-logs
  redis_test_data:
    name: codestory-redis-test-data