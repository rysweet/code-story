FROM python:3.12-slim

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
      build-essential curl git && \
    rm -rf /var/lib/apt/lists/*

# Copy project metadata first for layer caching
WORKDIR /build
COPY pyproject.toml poetry.lock* ./
COPY README.md ./

# Copy minimal source for Poetry install
COPY src ./src

# Create venv and install Poetry and project dependencies
RUN python -m venv /app/.venv && \
    /app/.venv/bin/pip install --upgrade pip wheel && \
    /app/.venv/bin/pip install poetry && \
    /app/.venv/bin/poetry config virtualenvs.create false && \
    /app/.venv/bin/poetry install --no-interaction --no-ansi --with dev

# Create non-root user
RUN useradd -m appuser
USER appuser
WORKDIR /app

# Copy source
COPY --chown=appuser:appuser . /app

ENV PYTHONUNBUFFERED=1
ENV VIRTUAL_ENV=/app/.venv
ENV PATH="/app/.venv/bin:$PATH"

# Default command runs celery worker using venv python
CMD ["/app/.venv/bin/celery", "-A", "codestory.ingestion_pipeline.celery_app", "worker", "-l", "info", "-Q", "ingestion", "--concurrency=4"]