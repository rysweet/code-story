FROM python:3.12-slim

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
      build-essential curl git python3-venv virtualenv && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m appuser

WORKDIR /app

ENV PYTHONUNBUFFERED=1
ENV VIRTUAL_ENV=/app/.venv
ENV PATH="/app/.venv/bin:$PATH"

# Copy project to /app as root
COPY . /app

# Create venv and install Poetry and project dependencies as root (after copy)
RUN pip install --upgrade pip wheel virtualenv && \
    python3 -m virtualenv /app/.venv && \
    find /app/.venv && \
    ls -l /app/.venv/bin && \
    /app/.venv/bin/pip install --upgrade pip wheel && \
    /app/.venv/bin/pip install poetry && \
    /app/.venv/bin/poetry config virtualenvs.create false && \
    /app/.venv/bin/poetry install --no-interaction --no-ansi --with dev --no-root && \
    /app/.venv/bin/pip install celery && \
    ls -l /app/.venv/bin && \
    /app/.venv/bin/python -m celery --version

RUN ls -l /app/.venv
RUN ls -l /app/.venv/bin
RUN echo "DEBUG: $(ls -l /app/.venv/bin)"
RUN file /app/.venv/bin/python || true
RUN cat /app/.venv/bin/python || true

# Set ownership and switch to non-root user
RUN chown -R appuser:appuser /app
USER appuser

# Default command runs celery worker using venv python
CMD ["/app/.venv/bin/python", "-m", "celery", "-A", "codestory.ingestion_pipeline.celery_app", "worker", "-l", "info", "-Q", "ingestion", "--concurrency=4"]