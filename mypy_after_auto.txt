src/codestory/llm/metrics.py:164: error: Returning Any from function declared
to return "None"  [no-any-return]
                    return result
                    ^~~~~~~~~~~~~
src/codestory/llm/metrics.py:202: error: Returning Any from function declared
to return "None"  [no-any-return]
                    return result
                    ^~~~~~~~~~~~~
src/codestory/ingestion_pipeline/utils.py:33: error: No return value expected 
[return-value]
            return Counter(name, description, counter_labels)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/utils.py:38: error: No return value expected 
[return-value]
                    return collector
                    ^~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/utils.py:47: error: No return value expected 
[return-value]
            return NoOpCounter()
            ^~~~~~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/utils.py:55: error: No return value expected 
[return-value]
            return Histogram(name, description, hist_labels, buckets=bucke...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/utils.py:60: error: No return value expected 
[return-value]
                    return collector
                    ^~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/utils.py:69: error: No return value expected 
[return-value]
            return NoOpHistogram()
            ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/utils.py:75: error: No return value expected 
[return-value]
            return Gauge(name, description, gauge_labels)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/utils.py:80: error: No return value expected 
[return-value]
                    return collector
                    ^~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/utils.py:95: error: No return value expected 
[return-value]
            return NoOpGauge()
            ^~~~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/utils.py:96: error: "_get_or_create_counter"
does not return a value (it only ever returns None)  [func-returns-value]
    INGESTION_JOB_COUNT = _get_or_create_counter('codestory_ingestion_jobs...
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/ingestion_pipeline/utils.py:97: error: "_get_or_create_counter"
does not return a value (it only ever returns None)  [func-returns-value]
    INGESTION_STEP_COUNT = _get_or_create_counter('codestory_ingestion_ste...
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/ingestion_pipeline/utils.py:98: error: "_get_or_create_histogram"
does not return a value (it only ever returns None)  [func-returns-value]
    INGESTION_STEP_DURATION = _get_or_create_histogram('codestory_ingestio...
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/ingestion_pipeline/utils.py:99: error: "_get_or_create_gauge"
does not return a value (it only ever returns None)  [func-returns-value]
    INGESTION_ACTIVE_JOBS = _get_or_create_gauge('codestory_ingestion_acti...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/ingestion_pipeline/utils.py:179: error: Library stubs not
installed for "pkg_resources"  [import-untyped]
                    import pkg_resources
    ^
src/codestory/ingestion_pipeline/utils.py:179: note: Hint: "python3 -m pip install types-setuptools"
src/codestory/ingestion_pipeline/utils.py:179: note: (or run "mypy --install-types" to install all missing stub packages)
src/codestory/graphdb/metrics.py:60: error: Argument 1 to "contextmanager" has
incompatible type "Callable[[DummyHistogram], None]"; expected
"Callable[[DummyHistogram], Iterator[Never]]"  [arg-type]
        @contextmanager
         ^
src/codestory/graphdb/metrics.py:61: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
        def time(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/metrics.py:126: error: Returning Any from function
declared to return "None"  [no-any-return]
                    return func(*args, **kwargs)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/metrics.py:132: error: Returning Any from function
declared to return "None"  [no-any-return]
                    return result
                    ^~~~~~~~~~~~~
tests/unit/test_llm/test_metrics.py:8: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def mock_all_metrics_objects() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_docker_connectivity.py:22: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def worker_container(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_demos/test_mcp_demo.py:17: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def setup_mcp() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_demos/test_cli_demo.py:15: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def setup_test_env() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_demos/test_gui_demo.py:17: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def setup_gui() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_llm_models.py:24: error: Statement is unreachable 
[unreachable]
        assert ChatRole.USER == "user"
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_llm_models.py:46: error: Argument 1 to "ChatMessage"
has incompatible type "**dict[str, str]"; expected "ChatRole"  [arg-type]
        message = ChatMessage(**message_dict)
                                ^~~~~~~~~~~~
tests/unit/test_llm/test_llm_models.py:73: error: Item "None" of
"ChatFunctionCall | None" has no attribute "name"  [union-attr]
        assert message.function_call.name == "get_weather"
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_llm_models.py:203: error: Item "None" of
"UsageInfo | None" has no attribute "total_tokens"  [union-attr]
        assert response.usage.total_tokens == 18
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_llm_models.py:225: error: Item "None" of
"UsageInfo | None" has no attribute "prompt_tokens"  [union-attr]
        assert response.usage.prompt_tokens == 15
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_models.py:30: error: Statement is unreachable 
[unreachable]
        assert NodeType.DIRECTORY == "Directory"
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_models.py:42: error: Statement is unreachable 
[unreachable]
        assert RelationshipType.IMPORTS == "IMPORTS"
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/backoff.py:26: error: Item "None" of "Future | None" has no
attribute "exception"  [union-attr]
        exception = retry_state.outcome.exception()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/backoff.py:37: error: Item "None" of "Future | None" has no
attribute "exception"  [union-attr]
        exception = retry_state.outcome.exception()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/backoff.py:41: error: Item "None" of "RetryAction | None" has
no attribute "sleep"  [union-attr]
        wait_time = retry_state.next_action.sleep
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/backoff.py:67: error: Returning Any from function declared to
return "None"  [no-any-return]
                    return func(*args, **kwargs)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/backoff.py:118: error: Returning Any from function declared
to return "None"  [no-any-return]
                    return await func(*args, **kwargs)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_backoff.py:25: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def mock_all_prometheus() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_backoff.py:236: error: "RateLimitError" has no
attribute "headers"  [attr-defined]
                    e.headers = {"retry-after": "30"}
                    ^~~~~~~~~
src/codestory_docgrapher/parsers/docstring_parser.py:91: error: Name
"docstrings" already defined on line 84  [no-redef]
                docstrings: list[Any] = [][no-redef]
                ^
src/codestory_docgrapher/parsers/docstring_parser.py:91: error: Name "no" is
not defined  [name-defined]
                docstrings: list[Any] = [][no-redef]
                                           ^
src/codestory_docgrapher/parsers/docstring_parser.py:91: error: Name "redef" is
not defined  [name-defined]
                docstrings: list[Any] = [][no-redef]
                                              ^
src/codestory_docgrapher/parsers/docstring_parser.py:464: error: Name
"param_section" already defined on line 445  [no-redef]
                        param_section: list[Any] = [][no-redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:464: error: Name "no" is
not defined  [name-defined]
                        param_section: list[Any] = [][no-redef]
                                                      ^
src/codestory_docgrapher/parsers/docstring_parser.py:464: error: Name "redef"
is not defined  [name-defined]
                        param_section: list[Any] = [][no-redef]
                                                         ^
src/codestory_docgrapher/parsers/docstring_parser.py:488: error: Name
"param_section" already defined on line 445  [no-redef]
                        param_section: list[Any] = [][no-redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:488: error: Name "no" is
not defined  [name-defined]
                        param_section: list[Any] = [][no-redef]
                                                      ^
src/codestory_docgrapher/parsers/docstring_parser.py:488: error: Name "redef"
is not defined  [name-defined]
                        param_section: list[Any] = [][no-redef]
                                                         ^
src/codestory_docgrapher/parsers/docstring_parser.py:542: error: Name
"return_section" already defined on line 523  [no-redef]
                        return_section: list[Any] = [][no-redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:542: error: Name "no" is
not defined  [name-defined]
                        return_section: list[Any] = [][no-redef]
                                                       ^
src/codestory_docgrapher/parsers/docstring_parser.py:542: error: Name "redef"
is not defined  [name-defined]
                        return_section: list[Any] = [][no-redef]
                                                          ^
src/codestory_docgrapher/parsers/docstring_parser.py:566: error: Name
"return_section" already defined on line 523  [no-redef]
                        return_section: list[Any] = [][no-redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:566: error: Name "no" is
not defined  [name-defined]
                        return_section: list[Any] = [][no-redef]
                                                       ^
src/codestory_docgrapher/parsers/docstring_parser.py:566: error: Name "redef"
is not defined  [name-defined]
                        return_section: list[Any] = [][no-redef]
                                                          ^
src/codestory_docgrapher/parsers/docstring_parser.py:620: error: Name
"raises_section" already defined on line 601  [no-redef]
                        raises_section: list[Any] = [][no-redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:620: error: Name "no" is
not defined  [name-defined]
                        raises_section: list[Any] = [][no-redef]
                                                       ^
src/codestory_docgrapher/parsers/docstring_parser.py:620: error: Name "redef"
is not defined  [name-defined]
                        raises_section: list[Any] = [][no-redef]
                                                          ^
src/codestory_docgrapher/parsers/docstring_parser.py:644: error: Name
"raises_section" already defined on line 601  [no-redef]
                        raises_section: list[Any] = [][no-redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:644: error: Name "no" is
not defined  [name-defined]
                        raises_section: list[Any] = [][no-redef]
                                                       ^
src/codestory_docgrapher/parsers/docstring_parser.py:644: error: Name "redef"
is not defined  [name-defined]
                        raises_section: list[Any] = [][no-redef]
                                                          ^
src/codestory_docgrapher/parsers/docstring_parser.py:698: error: Name
"example_section" already defined on line 679  [no-redef]
                        example_section: list[Any] = [][no-redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:698: error: Name "no" is
not defined  [name-defined]
                        example_section: list[Any] = [][no-redef]
                                                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:698: error: Name "redef"
is not defined  [name-defined]
                        example_section: list[Any] = [][no-redef]
                                                           ^
src/codestory_docgrapher/parsers/docstring_parser.py:722: error: Name
"example_section" already defined on line 679  [no-redef]
                        example_section: list[Any] = [][no-redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:722: error: Name "no" is
not defined  [name-defined]
                        example_section: list[Any] = [][no-redef]
                                                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:722: error: Name "redef"
is not defined  [name-defined]
                        example_section: list[Any] = [][no-redef]
                                                           ^
src/codestory/config/settings.py:499: error: Incompatible types in assignment
(expression has type "SecretStr | None", variable has type "SecretStr") 
[assignment]
                            SecretStr(secret.value) if secret.value is not...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/config/settings.py:505: error: Item "None" of "SecretStr | None"
has no attribute "get_secret_value"  [union-attr]
                if not self.openai.api_key.get_secret_value():
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_settings.py:30: error: Missing named argument
"connection_timeout" for "Neo4jSettings"  [call-arg]
        neo4j = Neo4jSettings(
                ^
tests/unit/test_settings.py:30: error: Missing named argument
"max_connection_pool_size" for "Neo4jSettings"  [call-arg]
        neo4j = Neo4jSettings(
                ^
tests/unit/test_settings.py:30: error: Missing named argument
"connection_acquisition_timeout" for "Neo4jSettings"  [call-arg]
        neo4j = Neo4jSettings(
                ^
tests/unit/test_settings.py:33: error: Argument "password" to "Neo4jSettings"
has incompatible type "str"; expected "SecretStr"  [arg-type]
            password="password",
                     ^~~~~~~~~~
tests/unit/test_settings.py:43: error: Missing named argument "tenant_id" for
"OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/unit/test_settings.py:43: error: Missing named argument "subscription_id"
for "OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/unit/test_settings.py:43: error: Missing named argument "api_version" for
"OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/unit/test_settings.py:43: error: Missing named argument "max_retries" for
"OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/unit/test_settings.py:43: error: Missing named argument
"retry_backoff_factor" for "OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/unit/test_settings.py:43: error: Missing named argument "temperature" for
"OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/unit/test_settings.py:43: error: Missing named argument "max_tokens" for
"OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/unit/test_settings.py:43: error: Missing named argument "timeout" for
"OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/unit/test_settings.py:73: error: Missing named argument
"resource_max_tokens" for "IngestionSettings"  [call-arg]
        ingestion = IngestionSettings(
                    ^
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"port" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"host" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"workers" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"azure_tenant_id" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"azure_client_id" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"auth_enabled" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"code_story_service_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"api_token_issuer" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"api_audience" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"required_scopes" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"cors_origins" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"enable_grpc" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"prometheus_metrics_path" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"enable_opentelemetry" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"openapi_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"docs_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"redoc_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:14: error: Missing named argument
"debug" for "MCPSettings"  [call-arg]
        settings = MCPSettings()
                   ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"port" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"host" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"workers" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"azure_tenant_id" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"azure_client_id" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"auth_enabled" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"api_token_issuer" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"required_scopes" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"cors_origins" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"enable_grpc" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"prometheus_metrics_path" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"enable_opentelemetry" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"openapi_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"docs_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"redoc_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:36: error: Missing named argument
"debug" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"port" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"host" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"workers" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"azure_tenant_id" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"auth_enabled" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"api_token_issuer" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"api_audience" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"required_scopes" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"cors_origins" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"enable_grpc" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"prometheus_metrics_path" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"enable_opentelemetry" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"openapi_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"docs_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"redoc_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:42: error: Missing named argument
"debug" for "MCPSettings"  [call-arg]
        settings = MCPSettings(
                   ^
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"port" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"host" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"workers" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"azure_tenant_id" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"azure_client_id" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"auth_enabled" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"api_token_issuer" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"api_audience" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"required_scopes" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"cors_origins" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"enable_grpc" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"prometheus_metrics_path" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"enable_opentelemetry" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"openapi_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"docs_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"redoc_url" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:48: error: Missing named argument
"debug" for "MCPSettings"  [call-arg]
        settings = MCPSettings(code_story_service_url="http://localhost:80...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"port" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"host" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"workers" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"azure_tenant_id" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"azure_client_id" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"auth_enabled" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"code_story_service_url" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"api_token_issuer" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"api_audience" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"required_scopes" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"cors_origins" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"enable_grpc" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"prometheus_metrics_path" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"enable_opentelemetry" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"openapi_url" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"docs_url" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"redoc_url" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_config.py:86: error: Missing named argument
"debug" for "MCPSettings"  [call-arg]
            settings = MCPSettings()
                       ^~~~~~~~~~~~~
tests/integration/test_config.py:42: error: Missing named argument
"connection_timeout" for "Neo4jSettings"  [call-arg]
        neo4j = Neo4jSettings(
                ^
tests/integration/test_config.py:42: error: Missing named argument
"max_connection_pool_size" for "Neo4jSettings"  [call-arg]
        neo4j = Neo4jSettings(
                ^
tests/integration/test_config.py:42: error: Missing named argument
"connection_acquisition_timeout" for "Neo4jSettings"  [call-arg]
        neo4j = Neo4jSettings(
                ^
tests/integration/test_config.py:45: error: Argument "password" to
"Neo4jSettings" has incompatible type "str"; expected "SecretStr"  [arg-type]
            password="password",
                     ^~~~~~~~~~
tests/integration/test_config.py:57: error: Missing named argument "tenant_id"
for "OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/integration/test_config.py:57: error: Missing named argument
"subscription_id" for "OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/integration/test_config.py:57: error: Missing named argument
"api_version" for "OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/integration/test_config.py:57: error: Missing named argument
"max_retries" for "OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/integration/test_config.py:57: error: Missing named argument
"retry_backoff_factor" for "OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/integration/test_config.py:57: error: Missing named argument
"temperature" for "OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/integration/test_config.py:57: error: Missing named argument "max_tokens"
for "OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/integration/test_config.py:57: error: Missing named argument "timeout"
for "OpenAISettings"  [call-arg]
        openai = OpenAISettings(
                 ^
tests/integration/test_config.py:58: error: Argument "api_key" to
"OpenAISettings" has incompatible type "str"; expected "SecretStr | None" 
[arg-type]
            api_key="sk-test-key-openai",  # Fake key for testing
                    ^~~~~~~~~~~~~~~~~~~~
tests/integration/test_config.py:67: error: Argument "api_key" to
"AzureOpenAISettings" has incompatible type "str"; expected "SecretStr | None" 
[arg-type]
            api_key="test-azure-key",  # Fake key for testing
                    ^~~~~~~~~~~~~~~~
tests/integration/test_config.py:77: error: Unexpected keyword argument
"environment" for "ServiceSettings"  [call-arg]
        service = ServiceSettings(
                  ^
tests/integration/test_config.py:88: error: Missing named argument
"resource_max_tokens" for "IngestionSettings"  [call-arg]
        ingestion = IngestionSettings(
                    ^
tests/integration/test_config.py:130: error: Argument "client_secret" to
"AzureSettings" has incompatible type "str"; expected "SecretStr | None" 
[arg-type]
            client_secret="test-client-secret",
                          ^~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:19: error:
Missing named argument "connection_timeout" for "Neo4jSettings"  [call-arg]
    TEST_NEO4J_SETTINGS = Neo4jSettings(uri=TEST_URI, username=TEST_USERNA...
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:19: error:
Missing named argument "max_connection_pool_size" for "Neo4jSettings" 
[call-arg]
    TEST_NEO4J_SETTINGS = Neo4jSettings(uri=TEST_URI, username=TEST_USERNA...
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:19: error:
Missing named argument "connection_acquisition_timeout" for "Neo4jSettings" 
[call-arg]
    TEST_NEO4J_SETTINGS = Neo4jSettings(uri=TEST_URI, username=TEST_USERNA...
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:19: error:
Argument "password" to "Neo4jSettings" has incompatible type "str"; expected
"SecretStr"  [arg-type]
    ...s(uri=TEST_URI, username=TEST_USERNAME, password=TEST_PASSWORD, databa...
                                                        ^~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:22: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:110: error:
No return value expected  [return-value]
            return {'status': StepStatus.COMPLETED, 'job_id': job_id, 'fil...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:113: error:
No return value expected  [return-value]
            return {'status': StepStatus.FAILED, 'error': f'Error processi...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:124: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
        result = custom_process_filesystem(repository_path=sample_repo, jo...
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:157: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
        result = custom_process_filesystem(repository_path=sample_repo, jo...
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:167: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
        update_result = custom_process_filesystem(repository_path=sample_r...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/settings.py:147: error: Missing named argument "title"
for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument "summary"
for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument "version"
for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"api_prefix" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument "docs_url"
for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"openapi_url" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"redoc_url" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"cors_origins" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"cors_allow_credentials" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"cors_allow_methods" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"cors_allow_headers" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"auth_enabled" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"jwt_secret" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"jwt_algorithm" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"jwt_expiration" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"websocket_heartbeat" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"rate_limit_enabled" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"rate_limit_requests" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"rate_limit_window" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"metrics_enabled" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"metrics_route" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument "dev_mode"
for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"max_request_size" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory_service/settings.py:147: error: Missing named argument
"response_timeout" for "ServiceSettings"  [call-arg]
        return ServiceSettings()  # TODO: Pydantic BaseSettings with defau...
               ^~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:366: error: No overload variant of "AzureOpenAI"
matches argument type "dict[str, object]"  [call-overload]
                self._sync_client = AzureOpenAI(**azure_openai_kwargs)
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:366: note: Possible overload variants:
src/codestory/llm/client.py:366: note:     def AzureOpenAI(self, *, azure_endpoint: str, azure_deployment: str | None = ..., api_version: str | None = ..., api_key: str | None = ..., azure_ad_token: str | None = ..., azure_ad_token_provider: Callable[[], str] | None = ..., organization: str | None = ..., websocket_base_url: str | URL | None = ..., timeout: float | Timeout | NotGiven | None = ..., max_retries: int = ..., default_headers: Mapping[str, str] | None = ..., default_query: Mapping[str, object] | None = ..., http_client: Client | None = ..., _strict_response_validation: bool = ...) -> AzureOpenAI
src/codestory/llm/client.py:366: note:     def AzureOpenAI(self, *, azure_deployment: str | None = ..., api_version: str | None = ..., api_key: str | None = ..., azure_ad_token: str | None = ..., azure_ad_token_provider: Callable[[], str] | None = ..., organization: str | None = ..., websocket_base_url: str | URL | None = ..., timeout: float | Timeout | NotGiven | None = ..., max_retries: int = ..., default_headers: Mapping[str, str] | None = ..., default_query: Mapping[str, object] | None = ..., http_client: Client | None = ..., _strict_response_validation: bool = ...) -> AzureOpenAI
src/codestory/llm/client.py:366: note:     def AzureOpenAI(self, *, base_url: str, api_version: str | None = ..., api_key: str | None = ..., azure_ad_token: str | None = ..., azure_ad_token_provider: Callable[[], str] | None = ..., organization: str | None = ..., websocket_base_url: str | URL | None = ..., timeout: float | Timeout | NotGiven | None = ..., max_retries: int = ..., default_headers: Mapping[str, str] | None = ..., default_query: Mapping[str, object] | None = ..., http_client: Client | None = ..., _strict_response_validation: bool = ...) -> AzureOpenAI
src/codestory/llm/client.py:368: error: No overload variant of
"AsyncAzureOpenAI" matches argument type "dict[str, object]"  [call-overload]
                self._async_client = AsyncAzureOpenAI(**azure_openai_kwarg...
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:368: note: Possible overload variants:
src/codestory/llm/client.py:368: note:     def AsyncAzureOpenAI(self, *, azure_endpoint: str, azure_deployment: str | None = ..., api_version: str | None = ..., api_key: str | None = ..., azure_ad_token: str | None = ..., azure_ad_token_provider: Callable[[], str | Awaitable[str]] | None = ..., organization: str | None = ..., project: str | None = ..., websocket_base_url: str | URL | None = ..., timeout: float | Timeout | NotGiven | None = ..., max_retries: int = ..., default_headers: Mapping[str, str] | None = ..., default_query: Mapping[str, object] | None = ..., http_client: AsyncClient | None = ..., _strict_response_validation: bool = ...) -> AsyncAzureOpenAI
src/codestory/llm/client.py:368: note:     def AsyncAzureOpenAI(self, *, azure_deployment: str | None = ..., api_version: str | None = ..., api_key: str | None = ..., azure_ad_token: str | None = ..., azure_ad_token_provider: Callable[[], str | Awaitable[str]] | None = ..., organization: str | None = ..., project: str | None = ..., websocket_base_url: str | URL | None = ..., timeout: float | Timeout | NotGiven | None = ..., max_retries: int = ..., default_headers: Mapping[str, str] | None = ..., default_query: Mapping[str, object] | None = ..., http_client: AsyncClient | None = ..., _strict_response_validation: bool = ...) -> AsyncAzureOpenAI
src/codestory/llm/client.py:368: note:     def AsyncAzureOpenAI(self, *, base_url: str, api_version: str | None = ..., api_key: str | None = ..., azure_ad_token: str | None = ..., azure_ad_token_provider: Callable[[], str | Awaitable[str]] | None = ..., organization: str | None = ..., project: str | None = ..., websocket_base_url: str | URL | None = ..., timeout: float | Timeout | NotGiven | None = ..., max_retries: int = ..., default_headers: Mapping[str, str] | None = ..., default_query: Mapping[str, object] | None = ..., http_client: AsyncClient | None = ..., _strict_response_validation: bool = ...) -> AsyncAzureOpenAI
src/codestory/llm/client.py:380: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        def _prepare_request_data(self, request) -> None:
        ^
src/codestory/llm/client.py:401: error: No return value expected 
[return-value]
            return model_name, request_data
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:495: error: "_prepare_request_data" of
"OpenAIClient" does not return a value (it only ever returns None) 
[func-returns-value]
                model_name, request_data = self._prepare_request_data(requ...
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/llm/client.py:559: error: "_prepare_request_data" of
"OpenAIClient" does not return a value (it only ever returns None) 
[func-returns-value]
                model_name, request_data = self._prepare_request_data(requ...
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/llm/client.py:619: error: "_prepare_request_data" of
"OpenAIClient" does not return a value (it only ever returns None) 
[func-returns-value]
                model_name, request_data = self._prepare_request_data(requ...
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/llm/client.py:681: error: "_prepare_request_data" of
"OpenAIClient" does not return a value (it only ever returns None) 
[func-returns-value]
                model_name, request_data = self._prepare_request_data(requ...
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/llm/client.py:745: error: "_prepare_request_data" of
"OpenAIClient" does not return a value (it only ever returns None) 
[func-returns-value]
                model_name, request_data = self._prepare_request_data(requ...
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/llm/client.py:805: error: "_prepare_request_data" of
"OpenAIClient" does not return a value (it only ever returns None) 
[func-returns-value]
                model_name, request_data = self._prepare_request_data(requ...
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/graphdb/neo4j_connector.py:20: error: Name "get_settings" already
defined (possibly by an import)  [no-redef]
        get_settings: Union[Callable[[], Any], None] = None
        ^
src/codestory/graphdb/neo4j_connector.py:82: error: Returning Any from function
declared to return "None"  [no-any-return]
                        return func(*args, **kwargs)
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/neo4j_connector.py:137: error: Incompatible types in
assignment (expression has type "str | None", variable has type "str") 
[assignment]
                self.uri = uri
                           ^~~
src/codestory/graphdb/neo4j_connector.py:138: error: Incompatible types in
assignment (expression has type "str | None", variable has type "str") 
[assignment]
                self.username = username
                                ^~~~~~~~
src/codestory/graphdb/neo4j_connector.py:139: error: Incompatible types in
assignment (expression has type "str | None", variable has type "str") 
[assignment]
                self.password = password
                                ^~~~~~~~
src/codestory/graphdb/neo4j_connector.py:521: error: Returning Any from
function declared to return "None"  [no-any-return]
                    return func(self, **kwargs)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/neo4j_connector.py:529: error: Returning Any from
function declared to return "None"  [no-any-return]
                    return result
                    ^~~~~~~~~~~~~
src/codestory/graphdb/neo4j_connector.py:556: error: Returning Any from
function declared to return "None"  [no-any-return]
                    return self.driver.session.return_value
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/neo4j_connector.py:557: error: No return value expected 
[return-value]
                return self.driver.session(database=self.database)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/conftest.py:119: error: The return type of a generator function should be
"Generator" or one of its supertypes  [misc]
    def neo4j_connector(test_databases: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/conftest.py:151: error: The return type of a generator function should be
"Generator" or one of its supertypes  [misc]
    def redis_client(test_databases: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:12: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def patch_prometheus_metrics() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:18: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def mock_settings() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:35: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def client() -> None:
    ^~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:130: error: Need type annotation for
"future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:177: error: Item "None" of
"UsageInfo | None" has no attribute "prompt_tokens"  [union-attr]
                assert result.usage.prompt_tokens == 5
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:178: error: Item "None" of
"UsageInfo | None" has no attribute "completion_tokens"  [union-attr]
                assert result.usage.completion_tokens == 7
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:179: error: Item "None" of
"UsageInfo | None" has no attribute "total_tokens"  [union-attr]
                assert result.usage.total_tokens == 12
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:198: error: Item "None" of
"UsageInfo | None" has no attribute "prompt_tokens"  [union-attr]
                assert result.usage.prompt_tokens == 15
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:199: error: Item "None" of
"UsageInfo | None" has no attribute "completion_tokens"  [union-attr]
                assert result.usage.completion_tokens == 12
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:200: error: Item "None" of
"UsageInfo | None" has no attribute "total_tokens"  [union-attr]
                assert result.usage.total_tokens == 27
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:242: error: Need type annotation for
"future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:250: error: Item "None" of
"UsageInfo | None" has no attribute "prompt_tokens"  [union-attr]
                assert result.usage.prompt_tokens == 5
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:251: error: Item "None" of
"UsageInfo | None" has no attribute "completion_tokens"  [union-attr]
                assert result.usage.completion_tokens == 7
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:252: error: Item "None" of
"UsageInfo | None" has no attribute "total_tokens"  [union-attr]
                assert result.usage.total_tokens == 12
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_schema.py:20: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def mock_prometheus_metrics() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_connector.py:36: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def connector(mock_driver: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_connector.py:44: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def async_connector(mock_async_driver: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_connector.py:99: error: Need type annotation for
"params_list"  [var-annotated]
        params_list = [{}, {}]
                      ^~~~~~~~
tests/unit/test_config/test_settings_imports.py:61: error: Item "None" of
"SecretStr | None" has no attribute "get_secret_value"  [union-attr]
        assert settings.openai.api_key.get_secret_value() == "sk-test-key-...
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "title" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "summary" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "version" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "api_prefix" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "docs_url" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "openapi_url" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "redoc_url" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "cors_origins" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "cors_allow_credentials" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "cors_allow_methods" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "cors_allow_headers" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "auth_enabled" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "jwt_secret" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "jwt_algorithm" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "jwt_expiration" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "websocket_heartbeat" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "rate_limit_enabled" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "rate_limit_requests" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "rate_limit_window" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "metrics_enabled" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "metrics_route" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "dev_mode" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "max_request_size" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:14: error: Missing named
argument "response_timeout" for "ServiceSettings"  [call-arg]
        settings = ServiceSettings()
                   ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "title" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "summary" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "version" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "api_prefix" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "docs_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "openapi_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "redoc_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "cors_origins" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "cors_allow_credentials" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "cors_allow_methods" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "cors_allow_headers" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "auth_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "jwt_secret" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "jwt_algorithm" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "jwt_expiration" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "websocket_heartbeat" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "rate_limit_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "rate_limit_requests" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "rate_limit_window" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "metrics_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "metrics_route" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "dev_mode" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "max_request_size" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:38: error: Missing named
argument "response_timeout" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "title" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "summary" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "version" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "api_prefix" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "docs_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "openapi_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "redoc_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "cors_origins" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "cors_allow_credentials" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "cors_allow_methods" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "cors_allow_headers" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "auth_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "jwt_secret" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "jwt_algorithm" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "jwt_expiration" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "websocket_heartbeat" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "rate_limit_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "rate_limit_requests" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "rate_limit_window" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "metrics_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "metrics_route" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "dev_mode" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "max_request_size" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:56: error: Missing named
argument "response_timeout" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "title" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "summary" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "version" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "api_prefix" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "docs_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "openapi_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "redoc_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "cors_origins" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "cors_allow_credentials" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "cors_allow_methods" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "cors_allow_headers" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "auth_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "jwt_secret" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "jwt_algorithm" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "jwt_expiration" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "websocket_heartbeat" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "rate_limit_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "rate_limit_requests" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "rate_limit_window" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "metrics_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "metrics_route" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "dev_mode" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "max_request_size" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:68: error: Missing named
argument "response_timeout" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "title" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "summary" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "version" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "api_prefix" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "docs_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "openapi_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "redoc_url" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "cors_origins" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "cors_allow_credentials" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "cors_allow_methods" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "cors_allow_headers" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "auth_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "jwt_secret" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "jwt_algorithm" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "jwt_expiration" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "websocket_heartbeat" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "rate_limit_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "rate_limit_requests" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "rate_limit_window" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "metrics_enabled" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "metrics_route" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "dev_mode" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "max_request_size" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:76: error: Missing named
argument "response_timeout" for "ServiceSettings"  [call-arg]
            settings = ServiceSettings()
                       ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "title" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "summary" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "version" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "api_prefix" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "docs_url" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "openapi_url" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "redoc_url" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "cors_origins" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "cors_allow_credentials" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "cors_allow_methods" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "cors_allow_headers" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "auth_enabled" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "jwt_secret" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "jwt_algorithm" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "jwt_expiration" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "websocket_heartbeat" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "rate_limit_enabled" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "rate_limit_requests" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "rate_limit_window" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "metrics_enabled" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "metrics_route" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "dev_mode" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "max_request_size" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_settings.py:95: error: Missing named
argument "response_timeout" for "ServiceSettings"  [call-arg]
                    ServiceSettings()
                    ^~~~~~~~~~~~~~~~~
tests/integration/conftest.py:129: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def mock_settings() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/conftest.py:245: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/conftest.py:304: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def redis_client() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/conftest.py:337: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def celery_app(redis_client: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_llm/conftest.py:84: error: Incompatible types in
assignment (expression has type "str | None", variable has type "str") 
[assignment]
        endpoint = os.environ.get("OPENAI__ENDPOINT") or os.environ.get("A...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:16: error:
Need type annotation for "steps_status" (hint:
"steps_status: dict[<type>, <type>] = ...")  [var-annotated]
            self.steps_status = {}
            ^~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:17: error:
Need type annotation for "steps_results" (hint:
"steps_results: dict[<type>, <type>] = ...")  [var-annotated]
            self.steps_results = {}
            ^~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:18: error:
Need type annotation for "steps_errors" (hint:
"steps_errors: dict[<type>, <type>] = ...")  [var-annotated]
            self.steps_errors = {}
            ^~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:19: error:
Need type annotation for "dependency_graph" (hint:
"dependency_graph: dict[<type>, <type>] = ...")  [var-annotated]
            self.dependency_graph = {}
            ^~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:20: error:
Need type annotation for "_step_instances" (hint:
"_step_instances: dict[<type>, <type>] = ...")  [var-annotated]
            self._step_instances = {}
            ^~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:53: error:
Right operand of "and" is never evaluated  [unreachable]
                if self._thread and self._thread.is_alive():
                                    ^~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:63: error:
Incompatible types in assignment (expression has type "Thread", variable has
type "None")  [assignment]
                self._thread = threading.Thread(target=self._run_pipeline)
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:64: error:
"None" has no attribute "daemon"  [attr-defined]
                self._thread.daemon = True
                ^~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:65: error:
"None" has no attribute "start"  [attr-defined]
                self._thread.start()
                ^~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:258: error:
Right operand of "and" is never evaluated  [unreachable]
            if self._thread and self._thread.is_alive():
                                ^~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:259: error:
Statement is unreachable  [unreachable]
                self._thread.join(timeout=5.0)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_simple.py:18: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector(neo4j_env: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:164: error: Value of
type "Any | None" is not indexable  [index]
                assert constraint.get("labelsOrTypes")[0] == "File"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:165: error: Value of
type "Any | None" is not indexable  [index]
                assert constraint.get("properties")[0] == "path"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:167: error: Value of
type "Any | None" is not indexable  [index]
                assert constraint.get("labelsOrTypes")[0] == "Directory"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:168: error: Value of
type "Any | None" is not indexable  [index]
                assert constraint.get("properties")[0] == "path"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:174: error: Value of
type "Any | None" is not indexable  [index]
                assert index.get("labelsOrTypes")[0] == "File"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:175: error: Value of
type "Any | None" is not indexable  [index]
                assert index.get("properties")[0] == "extension"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/infrastructure/openai_adapter.py:262: error: Argument
"role" to "ChatMessage" has incompatible type "str"; expected "ChatRole" 
[arg-type]
                    ChatMessage(role="system", content="You are a helpful ...
                                     ^~~~~~~~
src/codestory_service/infrastructure/openai_adapter.py:263: error: Argument
"role" to "ChatMessage" has incompatible type "str"; expected "ChatRole" 
[arg-type]
                    ChatMessage(role="user", content=test_message),
                                     ^~~~~~
src/codestory_service/infrastructure/openai_adapter.py:274: error: Incompatible
types in assignment (expression has type "int", target has type
"Sequence[object]")  [assignment]
    ...          chat_params["max_completion_tokens"] = 10  # Use a higher va...
                                                        ^~
src/codestory_service/infrastructure/openai_adapter.py:278: error: Incompatible
types in assignment (expression has type "int", target has type
"Sequence[object]")  [assignment]
                    chat_params["max_tokens"] = 10
                                                ^~
src/codestory_service/infrastructure/openai_adapter.py:279: error: Incompatible
types in assignment (expression has type "float", target has type
"Sequence[object]")  [assignment]
                    chat_params["temperature"] = 0.1  # Low temperature fo...
                                                 ^~~
src/codestory_service/infrastructure/openai_adapter.py:285: error: Argument 1
to "chat_async" of "OpenAIClient" has incompatible type
"**dict[str, Sequence[object]]"; expected "list[ChatMessage]"  [arg-type]
                response = await self.client.chat_async(**chat_params)
                                                          ^~~~~~~~~~~
src/codestory_service/infrastructure/openai_adapter.py:285: error: Argument 1
to "chat_async" of "OpenAIClient" has incompatible type
"**dict[str, Sequence[object]]"; expected "str | None"  [arg-type]
                response = await self.client.chat_async(**chat_params)
                                                          ^~~~~~~~~~~
src/codestory_service/infrastructure/openai_adapter.py:285: error: Argument 1
to "chat_async" of "OpenAIClient" has incompatible type
"**dict[str, Sequence[object]]"; expected "int | None"  [arg-type]
                response = await self.client.chat_async(**chat_params)
                                                          ^~~~~~~~~~~
src/codestory_service/infrastructure/openai_adapter.py:285: error: Argument 1
to "chat_async" of "OpenAIClient" has incompatible type
"**dict[str, Sequence[object]]"; expected "float | None"  [arg-type]
                response = await self.client.chat_async(**chat_params)
                                                          ^~~~~~~~~~~
src/codestory_service/infrastructure/neo4j_adapter.py:242: error: Incompatible
types in assignment (expression has type "DummyNeo4jConnector", variable has
type "Neo4jConnector")  [assignment]
            self.connector = DummyNeo4jConnector()
                             ^~~~~~~~~~~~~~~~~~~~~
src/codestory_service/infrastructure/msal_validator.py:84: error: Returning Any
from function declared to return "dict[str, Any]"  [no-any-return]
                    return claims
                    ^~~~~~~~~~~~~
src/codestory_service/infrastructure/msal_validator.py:97: error: Returning Any
from function declared to return "dict[str, Any]"  [no-any-return]
                    return claims
                    ^~~~~~~~~~~~~
src/codestory_service/application/config_service.py:104: error: Incompatible
types in assignment (expression has type "Redis", variable has type "None") 
[assignment]
                self.redis = redis.Redis(  # TODO: Fix type compatibility
                             ^
src/codestory_service/application/config_service.py:109: error: "None" has no
attribute "ping"  [attr-defined]
                await self.redis.ping()[attr-defined]
                      ^~~~~~~~~~~~~~~
src/codestory_service/application/config_service.py:109: error: Name "attr" is
not defined  [name-defined]
                await self.redis.ping()[attr-defined]
                                        ^
src/codestory_service/application/config_service.py:109: error: Name "defined"
is not defined  [name-defined]
                await self.redis.ping()[attr-defined]
                                             ^
src/codestory_service/application/config_service.py:124: error: Incompatible
types in assignment (expression has type "Coroutine[Any, Any, None]", variable
has type "None")  [assignment]
                    self._init_redis_task = self._init_redis()  # TODO: Fi...
                                            ^~~~~~~~~~~~~~~~~~
src/codestory_service/application/config_service.py:124: note: Maybe you forgot to use "await"?
src/codestory_service/application/config_service.py:125: error: Incompatible
types in "await" (actual type "None", expected type "Awaitable[Any]")  [misc]
                    await self._init_redis_task
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/config_service.py:127: error: Statement is
unreachable  [unreachable]
                    await self._init_redis_task
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/config_service.py:133: error: Statement is
unreachable  [unreachable]
            try:
            ^
src/codestory_service/application/config_service.py:300: error: "ConfigWriter"
has no attribute "update_setting"  [attr-defined]
                        self.writer.update_setting(section, key, item.valu...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/config_service.py:303: error: "ConfigWriter"
has no attribute "update_setting"  [attr-defined]
                        self.writer.update_setting("service", key, item.va...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/auth/entra_validator.py:102: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return claims
                ^~~~~~~~~~~~~
src/codestory_mcp/auth/entra_validator.py:129: error: Name "scopes" already
defined on line 125  [no-redef]
                scopes: list[Any] = []
                ^
src/codestory_filesystem/step.py:12: error: Cannot find implementation or
library stub for module named "pathspec"  [import-not-found]
    import pathspec
    ^
src/codestory_filesystem/step.py:206: error: Dict entry 1 has incompatible type
"str": "str"; expected "str": "StepStatus | None"  [dict-item]
    ...tus_info.update({'status': StepStatus.COMPLETED, 'message': status_msg...
                                                        ^~~~~~~~~~~~~~~~~~~~~
src/codestory_filesystem/step.py:206: error: Dict entry 2 has incompatible type
"str": "float"; expected "str": "StepStatus | None"  [dict-item]
    ...s': StepStatus.COMPLETED, 'message': status_msg, 'progress': 100.0, 'r...
                                                        ^~~~~~~~~~~~~~~~~
src/codestory_filesystem/step.py:210: error: Dict entry 1 has incompatible type
"str": "str"; expected "str": "StepStatus | None"  [dict-item]
    ...status_info.update({'status': StepStatus.FAILED, 'error': f'Error retr...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_filesystem/step.py:214: error: Dict entry 1 has incompatible type
"str": "str"; expected "str": "StepStatus | None"  [dict-item]
    ...status_info.update({'status': StepStatus.FAILED, 'error': str(result.r...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_filesystem/step.py:309: error: Untyped decorator makes function
"process_filesystem" untyped  [misc]
    @shared_task(name='codestory_filesystem.step.process_filesystem', bind...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_filesystem/step.py:310: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    def process_filesystem(self, repository_path: str, ignore_patterns: li...
    ^
src/codestory_filesystem/step.py:376: error: Argument 1 to "Neo4jConnector" has
incompatible type "**dict[str, str]"; expected "bool"  [arg-type]
                neo4j = Neo4jConnector(**params)
                                         ^~~~~~
src/codestory_filesystem/step.py:594: error: Value of type "object" is not
indexable  [index]
    ...ctory Operations ({dir_count} dirs):\n  - Total: {overall_timing_stats...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_filesystem/step.py:599: error: Value of type "object" is not
indexable  [index]
    ...nt': dir_count, 'performance': {'avg_file_time': overall_timing_stats[...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_filesystem/step.py:604: error: Value of type "object" is not
indexable  [index]
    ...on:.2f} seconds\n- Average Neo4j operation time: {overall_timing_stats...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_docgrapher/document_finder.py:133: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
            files = self.connector.run_query(query, fetch_all=True)
                    ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/document_finder.py:208: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
            files = self.connector.run_query(query, fetch_all=True)
                    ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:46: error: "Neo4jConnector" has
no attribute "run_query"  [attr-defined]
            files = self.connector.run_query(query, fetch_all=True)
                    ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:55: error: "Neo4jConnector" has
no attribute "run_query"  [attr-defined]
            dirs = self.connector.run_query(query, fetch_all=True)
                   ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:64: error: "Neo4jConnector" has
no attribute "run_query"  [attr-defined]
            classes = self.connector.run_query(query, fetch_all=True)
                      ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:76: error: "Neo4jConnector" has
no attribute "run_query"  [attr-defined]
            funcs = self.connector.run_query(query, fetch_all=True)
                    ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:93: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                return self.path_cache[path_reference]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:111: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                return matching_paths[0]
                ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:133: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                        return filtered_paths[0]
                        ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:138: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                        return shortest
                        ^~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:143: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                return shortest
                ^~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:153: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                    return matching_paths[0]
                    ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:176: error: "Neo4jConnector" has
no attribute "run_query"  [attr-defined]
                result = self.connector.run_query(
                         ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:191: error: "Neo4jConnector" has
no attribute "run_query"  [attr-defined]
                result = self.connector.run_query(
                         ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:205: error: "Neo4jConnector" has
no attribute "run_query"  [attr-defined]
            result = self.connector.run_query(
                     ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:238: error: "Neo4jConnector" has
no attribute "run_query"  [attr-defined]
                result = self.connector.run_query(
                         ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:257: error: "Neo4jConnector" has
no attribute "run_query"  [attr-defined]
                result = self.connector.run_query(
                         ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:275: error: "Neo4jConnector" has
no attribute "run_query"  [attr-defined]
            result = self.connector.run_query(
                     ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:59: error: Argument 2 to
"_analyze_code_block" of "ContentAnalyzer" has incompatible type
"str | int | float"; expected "str"  [arg-type]
    ...        return self._analyze_code_block(content, entity.metadata.get("...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_docgrapher/utils/content_analyzer.py:342: error: Item "None" of
"OpenAIClient | None" has no attribute "chat"  [union-attr]
                response = self.llm_client.chat(messages=messages, max_tok...
                           ^~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:344: error: Item "None" of
"str | Any | None" has no attribute "strip"  [union-attr]
                return response.choices[0].message.content.strip()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:377: error: Item "None" of
"OpenAIClient | None" has no attribute "chat"  [union-attr]
                response = self.llm_client.chat(messages=messages, max_tok...
                           ^~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:379: error: Item "None" of
"str | Any | None" has no attribute "strip"  [union-attr]
                return response.choices[0].message.content.strip()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:412: error: Item "None" of
"OpenAIClient | None" has no attribute "chat"  [union-attr]
                response = self.llm_client.chat(messages=messages, max_tok...
                           ^~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:414: error: Item "None" of
"str | Any | None" has no attribute "strip"  [union-attr]
                return response.choices[0].message.content.strip()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_blarify/step.py:60: error: Incompatible types in assignment
(expression has type "None", variable has type "DockerClient")  [assignment]
                self.docker_client = None  # TODO: Fix None assignment
                                     ^~~~
src/codestory_blarify/step.py:423: error: Untyped decorator makes function
"run_blarify" untyped  [misc]
    @shared_task(bind=True, name="codestory_blarify.step.run_blarify")
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_blarify/step.py:424: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
    def run_blarify(
    ^
src/codestory_blarify/step.py:495: error: Unpacking a string is disallowed 
[misc]
                    for host_path, container_path in os.environ.get(
                    ^
src/codestory_blarify/step.py:498: error: Cannot determine type of "host_path" 
[has-type]
                        if host_path and container_path and repository_pat...
                           ^~~~~~~~~
src/codestory_blarify/step.py:498: error: Cannot determine type of
"container_path"  [has-type]
                        if host_path and container_path and repository_pat...
                                         ^~~~~~~~~~~~~~
src/codestory_blarify/step.py:500: error: Cannot determine type of "host_path" 
[has-type]
                                host_path, container_path, 1
                                ^~~~~~~~~
src/codestory_blarify/step.py:500: error: Cannot determine type of
"container_path"  [has-type]
                                host_path, container_path, 1
                                           ^~~~~~~~~~~~~~
src/codestory_blarify/step.py:749: error: Returning Any from function declared
to return "dict[str, Any]"  [no-any-return]
            return result
            ^~~~~~~~~~~~~
src/codestory/mcp/main.py:37: error: "Settings" has no attribute "project_name"
 [attr-defined]
            "name": f"{settings.project_name}-mcp",
                      ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/tasks.py:14: error: Incompatible types in
assignment (expression has type "None", variable has type Module)  [assignment]
        psutil = None
                 ^~~~
src/codestory/ingestion_pipeline/tasks.py:27: error: Untyped decorator makes
function "run_step" untyped  [misc]
    @app.task(name="codestory.ingestion_pipeline.tasks.run_step", bind=Tru...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/tasks.py:388: error: Untyped decorator makes
function "orchestrate_pipeline" untyped  [misc]
    @app.task(name="codestory.ingestion_pipeline.tasks.orchestrate_pipelin...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/ingestion_pipeline/tasks.py:607: error: Untyped decorator makes
function "get_job_status" untyped  [misc]
    @app.task(name="codestory.ingestion_pipeline.tasks.get_job_status", bi...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/ingestion_pipeline/tasks.py:647: error: Untyped decorator makes
function "stop_job" untyped  [misc]
    @app.task(name="codestory.ingestion_pipeline.tasks.stop_job", bind=Tru...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_config_writer.py:13: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def temp_env_file() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_config_writer.py:26: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def temp_toml_file() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/conftest.py:9: error: The return type of a generator function should
be "Generator" or one of its supertypes  [misc]
    def mock_settings() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_auth.py:62: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_jwks_client(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_auth.py:68: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_jwt(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_filesystem_ingestion_simple.py:17: error: The return
type of a generator function should be "Generator" or one of its supertypes 
[misc]
        def setup_and_cleanup(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_filesystem_ingestion_simple.py:85: error: Need type
annotation for "step_params"  [var-annotated]
            step_params = {'ignore_patterns': []}
                          ^~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:84: error:
No return value expected  [return-value]
            return {'status': StepStatus.COMPLETED, 'job_id': job_id, 'fil...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:87: error:
No return value expected  [return-value]
            return {'status': StepStatus.FAILED, 'error': f'Error processi...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:91: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:111: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:141: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
            result = custom_process_filesystem(repository_path=repository_...
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:182: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
            result = custom_process_filesystem(repository_path=repository_...
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:200: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
            result = custom_process_filesystem(repository_path=repository_...
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:26: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:44: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:84: error:
No return value expected  [return-value]
                        return img_name
                        ^~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:92: error:
No return value expected  [return-value]
                    return img_name
                    ^~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:107: error:
No return value expected  [return-value]
                    return test_image_name
                    ^~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:247: error:
Statement is unreachable  [unreachable]
            return
            ^~~~~~
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:301: error:
Value of type "dict[str, Any] | None" is not indexable  [index]
            assert final_status['status'] in [StepStatus.STOPPED, StepStat...
                   ^~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:302: error:
Value of type "dict[str, Any] | None" is not indexable  [index]
            if final_status['status'] == StepStatus.COMPLETED:
               ^~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/graph_service.py:187: error: Argument
"query_type" to "CypherQuery" has incompatible type "str"; expected "QueryType" 
[arg-type]
                        query_type="read",
                                   ^~~~~~
src/codestory_service/application/graph_service.py:199: error: "OpenAIAdapter"
has no attribute "answer_question"  [attr-defined]
                answer = await self.openai.answer_question(request, contex...
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/graph_service.py:202: error: Returning Any
from function declared to return "AskAnswer"  [no-any-return]
                return answer
                ^~~~~~~~~~~~~
src/codestory_service/application/graph_service.py:314: error: Incompatible
types in assignment (expression has type "str", target has type "int") 
[assignment]
                params["focus_node_id"] = request.focus_node_id  # TODO: F...
                                          ^~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/graph_service.py:324: error: Incompatible
types in assignment (expression has type "list[str]", target has type "int") 
[assignment]
                params["node_types"] = node_types  # TODO: Fix type compat...
                                       ^~~~~~~~~~
src/codestory_service/application/graph_service.py:335: error: Incompatible
types in assignment (expression has type "str", target has type "int") 
[assignment]
                params["search_query"] = search_query  # TODO: Fix type co...
                                         ^~~~~~~~~~~~
src/codestory_service/application/graph_service.py:348: error: Argument
"query_type" to "CypherQuery" has incompatible type "str"; expected "QueryType" 
[arg-type]
                query_type="read",
                           ^~~~~~
src/codestory_service/application/graph_service.py:1149: error: Argument
"query_type" to "CypherQuery" has incompatible type "str"; expected "QueryType" 
[arg-type]
    ...y = CypherQuery(query="MATCH (n) DETACH DELETE n", query_type="write")
                                                                     ^~~~~~~
src/codestory_service/application/graph_service.py:1158: error: Argument
"query_type" to "CypherQuery" has incompatible type "str"; expected "QueryType" 
[arg-type]
    ...           query="CALL apoc.schema.assert({}, {})", query_type="write"
                                                                      ^~~~~~~
src/codestory_mcp/adapters/openai_service.py:55: error: Argument "role" to
"ChatMessage" has incompatible type "str"; expected "ChatRole"  [arg-type]
                        role="system",
                             ^~~~~~~~
src/codestory_mcp/adapters/openai_service.py:69: error: Argument "role" to
"ChatMessage" has incompatible type "str"; expected "ChatRole"  [arg-type]
                            role="user",
                                 ^~~~~~
src/codestory_mcp/adapters/openai_service.py:79: error: Argument "role" to
"ChatMessage" has incompatible type "str"; expected "ChatRole"  [arg-type]
                            role="user",
                                 ^~~~~~
src/codestory_mcp/adapters/openai_service.py:88: error: Argument "role" to
"ChatMessage" has incompatible type "str"; expected "ChatRole"  [arg-type]
                messages.append(ChatMessage(role="user", content=f"```\n{c...
                                                 ^~~~~~
src/codestory_mcp/adapters/openai_service.py:99: error: "OpenAIClient" has no
attribute "create_chat_completion"  [attr-defined]
                response = await self.client.create_chat_completion(reques...
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/adapters/openai_service.py:108: error: Returning Any from
function declared to return "str"  [no-any-return]
                return summary
                ^~~~~~~~~~~~~~
src/codestory_mcp/adapters/openai_service.py:162: error: Argument "role" to
"ChatMessage" has incompatible type "str"; expected "ChatRole"  [arg-type]
                        role="system",
                             ^~~~~~~~
src/codestory_mcp/adapters/openai_service.py:171: error: Argument "role" to
"ChatMessage" has incompatible type "str"; expected "ChatRole"  [arg-type]
                        role="user",
                             ^~~~~~
src/codestory_mcp/adapters/openai_service.py:190: error: "OpenAIClient" has no
attribute "create_chat_completion"  [attr-defined]
                response = await self.client.create_chat_completion(reques...
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/adapters/openai_service.py:199: error: Returning Any from
function declared to return "str"  [no-any-return]
                return explanation
                ^~~~~~~~~~~~~~~~~~
src/codestory_mcp/adapters/openai_service.py:235: error: "OpenAIClient" has no
attribute "create_embedding"  [attr-defined]
                await self.client.create_embedding(code)
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/adapters/graph_service.py:97: error: Incompatible return
value type (got "MockNode", expected "Node")  [return-value]
                return node
                       ^~~~
src/codestory_mcp/adapters/graph_service.py:167: error: Incompatible types in
assignment (expression has type "dict[str, Any]", target has type "str") 
[assignment]
                    payload['parameters'] = parameters
                                            ^~~~~~~~~~
src/codestory_mcp/adapters/graph_service.py:175: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/adapters/graph_service.py:234: error: Returning Any from
function declared to return "None"  [no-any-return]
                return self.properties[key]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/adapters/graph_service.py:289: error: Returning Any from
function declared to return "None"  [no-any-return]
                return self.properties[key]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/entity_linker.py:195: error: Returning Any from
function declared to return "list[str]"  [no-any-return]
                return self.entity_cache[cache_key]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/entity_linker.py:207: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                records = self.connector.run_query(
                          ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/entity_linker.py:220: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                records = self.connector.run_query(
                          ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/entity_linker.py:237: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                records = self.connector.run_query(
                          ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/entity_linker.py:251: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                records = self.connector.run_query(
                          ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/entity_linker.py:292: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                records = self.connector.run_query(
                          ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/entity_linker.py:307: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                records = self.connector.run_query(
                          ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/entity_linker.py:322: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                records = self.connector.run_query(
                          ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/entity_linker.py:337: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                records = self.connector.run_query(
                          ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:91: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                    return health_data
                    ^~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:100: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                    return health_data
                    ^~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:206: error: Incompatible types in
assignment (expression has type "list[str]", target has type "str") 
[assignment]
                data['dependencies'] = list(dependencies)
                                       ^~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:289: error: Returning Any from
function declared to return "list[dict[str, Any]]"  [no-any-return]
                        return data['items']
                        ^~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:291: error: Returning Any from
function declared to return "list[dict[str, Any]]"  [no-any-return]
                        return data['jobs']
                        ^~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:322: error: Incompatible types in
assignment (expression has type "dict[str, Any]", target has type "str") 
[assignment]
                data['parameters'] = parameters
                                     ^~~~~~~~~~
src/codestory/cli/client/service_client.py:336: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:354: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:374: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:391: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:405: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:419: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:444: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return health_data
                ^~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:538: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                    return response.json()
                    ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:542: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                    return response.json()
                    ^~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_ingestion_pipeline/test_manager.py:26: error: The return type
of a generator function should be "Generator" or one of its supertypes  [misc]
    def mock_prometheus_metrics() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_ingestion_pipeline/test_manager.py:46: error: The return type
of a generator function should be "Generator" or one of its supertypes  [misc]
        def config_file(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_ingestion_pipeline/test_manager.py:105: error: Cannot assign to
a method  [method-assign]
                manager._get_step_class = lambda name: mock_step_class if ...
                ^~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_ingestion_pipeline/test_manager.py:105: error: Incompatible
types in assignment (expression has type "Callable[[str], Any | None]", variable
has type "Callable[[str], type[PipelineStep] | None]")  [assignment]
                manager._get_step_class = lambda name: mock_step_class if ...
                                          ^
tests/unit/test_ingestion_pipeline/test_manager.py:111: error: Cannot assign to
a method  [method-assign]
                    manager._get_step_class = original_method
                    ^~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:82: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_settings(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:91: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_metrics(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:99: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_client(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:132: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:155: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:169: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:187: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:205: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:222: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:253: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_client(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:261: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_metrics(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:292: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:315: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:333: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:357: error: Need type annotation
for "embed_future"  [var-annotated]
            embed_future = asyncio.Future()
                           ^~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_retry_and_failure.py:25: error:
No return value expected  [return-value]
                return {'status': StepStatus.FAILED, 'progress': 0, 'error...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_retry_and_failure.py:27: error:
No return value expected  [return-value]
                return {'status': StepStatus.COMPLETED, 'progress': 100, '...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:85: error:
No return value expected  [return-value]
            return {'status': StepStatus.COMPLETED, 'job_id': job_id, 'fil...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:88: error:
No return value expected  [return-value]
            return {'status': StepStatus.FAILED, 'error': f'Error processi...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:92: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:108: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:120: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def test_config() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:137: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
            result = custom_process_filesystem(repository_path=repository_...
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:188: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
            result = custom_process_filesystem(repository_path=repository_...
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_summarizer/step.py:268: error: Untyped decorator makes function
"run_summarizer" untyped  [misc]
    @shared_task(bind=True, name="codestory_summarizer.step.run_summarizer...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/api/auth.py:92: error: Returning Any from function
declared to return "UserInfo"  [no-any-return]
            return UserInfo(id="anonymous", name="Anonymous User", roles=[...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/auth.py:92: error: Missing named argument "email" for
"UserInfo"  [call-arg]
            return UserInfo(id="anonymous", name="Anonymous User", roles=[...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/auth.py:92: error: Value of type "UserInfo" is not
indexable  [index]
            return UserInfo(id="anonymous", name="Anonymous User", roles=[...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/auth.py:92: error: Name "call" is not defined 
[name-defined]
    ...s", name="Anonymous User", roles=[], is_authenticated=False)[call-arg]
                                                                    ^
src/codestory_service/api/auth.py:92: error: Name "arg" is not defined 
[name-defined]
    ...s", name="Anonymous User", roles=[], is_authenticated=False)[call-arg]
                                                                         ^
src/codestory_mcp/server.py:48: error: Argument 1 to "EntraValidator" has
incompatible type "str | None"; expected "str"  [arg-type]
            validator = EntraValidator(settings.azure_tenant_id, settings....
                                       ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/server.py:48: error: Argument 2 to "EntraValidator" has
incompatible type "str | None"; expected "str"  [arg-type]
    ...dator = EntraValidator(settings.azure_tenant_id, settings.api_audience...
                                                        ^~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/server.py:96: error: Argument 1 to "asynccontextmanager" has
incompatible type "Callable[[FastAPI], None]"; expected
"Callable[[FastAPI], AsyncIterator[Never]]"  [arg-type]
    @asynccontextmanager
     ^
src/codestory_mcp/server.py:97: error: The return type of an async generator
function should be "AsyncGenerator" or one of its supertypes  [misc]
    async def lifespan(app: FastAPI) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/server.py:123: error: Missing return statement  [empty-body]
        async def execute_tool(tool_name: str, params: dict[str, Any], use...
        ^
src/codestory_mcp/tools/summarize_node.py:83: error: Value of type
"frozenset[str]" is not indexable  [index]
                    node_type = node.labels[0] if node.labels else "Unknow...
                                ^~~~~~~~~~~~~~
src/codestory_mcp/tools/summarize_node.py:103: error: Value of type
"frozenset[str]" is not indexable  [index]
                        "type": node.labels[0] if node.labels else "Unknow...
                                ^~~~~~~~~~~~~~
src/codestory_mcp/tools/similar_code.py:80: error: Incompatible types in
assignment (expression has type "dict[str, Any]", target has type
"list[dict[str, Any]]")  [assignment]
                response["metadata"] = {
                                       ^
src/codestory_mcp/tools/search_graph.py:89: error: Argument 1 to
"to_mcp_result" of "NodeSerializer" has incompatible type
"list[tuple[Node, float]]"; expected "list[Node | tuple[Node, float]]" 
[arg-type]
                    results,
                    ^~~~~~~
src/codestory_mcp/tools/search_graph.py:89: note: "List" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
src/codestory_mcp/tools/search_graph.py:89: note: Consider using "Sequence" instead, which is covariant
src/codestory_mcp/tools/search_graph.py:95: error: Incompatible types in
assignment (expression has type "dict[str, Any]", target has type
"list[dict[str, Any]]")  [assignment]
                response["metadata"] = {
                                       ^
src/codestory_mcp/tools/path_to.py:119: error: Item "Relationship" of
"Node | Relationship" has no attribute "labels"  [union-attr]
                                    "type": element.labels[0] if element.l...
                                            ^~~~~~~~~~~~~~
src/codestory_mcp/tools/path_to.py:119: error: Value of type
"frozenset[str] | Any" is not indexable  [index]
                                    "type": element.labels[0] if element.l...
                                            ^~~~~~~~~~~~~~~~~
src/codestory_mcp/tools/path_to.py:129: error: Item "Node" of
"Node | Relationship" has no attribute "type"  [union-attr]
                                    "type": element.type,
                                            ^~~~~~~~~~~~
src/codestory_mcp/tools/path_to.py:139: error: Incompatible types in assignment
(expression has type "str", target has type "list[dict[str, Any]]") 
[assignment]
                    response["explanation"] = explanation
                                              ^~~~~~~~~~~
src/codestory_mcp/tools/path_to.py:142: error: Incompatible types in assignment
(expression has type "dict[str, Any]", target has type "list[dict[str, Any]]") 
[assignment]
                response["metadata"] = {
                                       ^
src/codestory_docgrapher/knowledge_graph.py:112: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                existing = self.connector.run_query(
                           ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/knowledge_graph.py:134: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                result = self.connector.run_query(
                         ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/knowledge_graph.py:176: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                result = self.connector.run_query(
                         ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/knowledge_graph.py:214: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                    result = self.connector.run_query(
                             ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/knowledge_graph.py:244: error: "Neo4jConnector" has no
attribute "run_query"  [attr-defined]
                    result = self.connector.run_query(
                             ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/progress_client.py:93: error: Right operand of "and"
is never evaluated  [unreachable]
            if self._thread and self._thread.is_alive():
                                ^~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/progress_client.py:94: error: Statement is unreachable
 [unreachable]
                return
                ^~~~~~
src/codestory/cli/client/progress_client.py:97: error: Incompatible types in
assignment (expression has type "Thread", variable has type "None") 
[assignment]
                self._thread = threading.Thread(target=self._subscribe_red...
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/progress_client.py:99: error: Incompatible types in
assignment (expression has type "Thread", variable has type "None") 
[assignment]
                self._thread = threading.Thread(target=self._poll_http)
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/progress_client.py:100: error: "None" has no attribute
"daemon"  [attr-defined]
            self._thread.daemon = True
            ^~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/progress_client.py:101: error: "None" has no attribute
"start"  [attr-defined]
            self._thread.start()
            ^~~~~~~~~~~~~~~~~~
src/codestory/cli/client/progress_client.py:105: error: Right operand of "and"
is never evaluated  [unreachable]
            if self._thread and self._thread.is_alive():
                                ^~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/progress_client.py:106: error: Statement is
unreachable  [unreachable]
                self._stop_event.set()
                ^~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:27: error: Only concrete class can
be given where "type[BaseTool]" is expected  [type-abstract]
            registered = register_tool(MockTool)
                                       ^~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:54: error: Only concrete class can
be given where "type[BaseTool]" is expected  [type-abstract]
            register_tool(MockTool1)
                          ^~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:55: error: Only concrete class can
be given where "type[BaseTool]" is expected  [type-abstract]
            register_tool(MockTool2)
                          ^~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:64: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def graph_service(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:72: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def metrics(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:123: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:142: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:154: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def graph_service(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:162: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def openai_service(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:170: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def metrics(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:204: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:219: error: Need type annotation
for "find_node_future"  [var-annotated]
            find_node_future = asyncio.Future()
                               ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:222: error: Need type annotation
for "summary_future"  [var-annotated]
            summary_future = asyncio.Future()
                             ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:239: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def graph_service(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:247: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def openai_service(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:255: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def metrics(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:339: error: Need type annotation
for "paths_future"  [var-annotated]
            paths_future = asyncio.Future()
                           ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:342: error: Need type annotation
for "explanation_future"  [var-annotated]
            explanation_future = asyncio.Future()
                                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:362: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def openai_service(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:370: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def metrics(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:402: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:11: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def mock_settings() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:27: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def mock_metrics() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:35: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def mock_entra_validator() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:43: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def mock_tool() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:81: error: Need type annotation
for "future"  [var-annotated]
        future = asyncio.Future()
                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:96: error: Need type annotation
for "future"  [var-annotated]
        future = asyncio.Future()
                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:109: error: Need type annotation
for "future"  [var-annotated]
        future = asyncio.Future()
                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:137: error: Need type annotation
for "future"  [var-annotated]
        future = asyncio.Future()
                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:165: error: Need type annotation
for "future"  [var-annotated]
        future = asyncio.Future()
                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:185: error: "BaseRoute" has no
attribute "path"  [attr-defined]
            route_paths = [route.path for route in app.routes]
                           ^~~~~~~~~~
tests/integration/test_mcp.py:19: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def client() -> None:
    ^~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:77: error:
No return value expected  [return-value]
            return {'status': StepStatus.COMPLETED, 'file_count': file_cou...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:80: error:
No return value expected  [return-value]
            return {'status': StepStatus.FAILED, 'error': f'Error processi...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:84: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def mock_llm_client() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:103: error:
Argument "message" to "ChatResponseChoice" has incompatible type "ChatMessage";
expected "ChatResponseMessage"  [arg-type]
    ...s=[ChatCompletionResponseChoice(index=0, message=ChatMessage(role=Chat...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:110: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:130: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:141: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
        result = custom_process_filesystem(repository_path=sample_repo, jo...
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:150: error:
Value of type "Any | None" is not indexable  [index]
            class_id = class_result['id']
                       ^~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:276: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
        fs_result = custom_process_filesystem(repository_path=initialized_...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:186: error:
Cannot assign to a method  [method-assign]
            manager.status = mock_status
            ^~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:309: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += fs_status["progress"] * fs_weight
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:313: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += blarify_status["progress"] * blarif...
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:317: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += summarizer_status["progress"] * sum...
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:356: error:
Cannot assign to a method  [method-assign]
        pipeline_manager.status = calculate_pipeline_progress
        ^~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:520: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += fs_status["progress"] * fs_weight
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:524: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += blarify_status["progress"] * blarif...
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:528: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += summarizer_status["progress"] * sum...
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:567: error:
Cannot assign to a method  [method-assign]
        pipeline_manager.status = calculate_pipeline_progress
        ^~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/main.py:53: error: Argument "foreign_pre_chain" to
"ProcessorFormatter" has incompatible type "list[object]"; expected
"Sequence[Callable[[Any, str, MutableMapping[str, Any]], Mapping[str, Any] | str | bytes | bytearray | tuple[Any, ...]]] | None"
 [arg-type]
            foreign_pre_chain=pre_chain,
                              ^~~~~~~~~
src/codestory_docgrapher/step.py:166: error: Untyped decorator makes function
"run_docgrapher" untyped  [misc]
    @shared_task(bind=True, name='codestory_docgrapher.step.run_docgrapher...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/step.py:167: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    def run_docgrapher(self, repository_path: str, job_id: str, ignore_pat...
    ^
tests/unit/test_codestory_service/test_domain_models.py:94: error: Argument
"source" to "ConfigMetadata" has incompatible type "str"; expected
"ConfigSource"  [arg-type]
                source="env",
                       ^~~~~
tests/unit/test_codestory_service/test_domain_models.py:106: error: Argument
"source" to "ConfigMetadata" has incompatible type "str"; expected
"ConfigSource"  [arg-type]
                source="config_file",
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_service/test_domain_models.py:120: error: Argument
"source" to "ConfigMetadata" has incompatible type "str"; expected
"ConfigSource"  [arg-type]
                source="env",
                       ^~~~~
tests/unit/test_codestory_service/test_domain_models.py:136: error: Argument
"source" to "ConfigMetadata" has incompatible type "str"; expected
"ConfigSource"  [arg-type]
                source="config_file",
                       ^~~~~~~~~~~~~
tests/unit/test_codestory_service/test_domain_models.py:148: error: List item 0
has incompatible type "dict[str, object]"; expected "ConfigPatchItem" 
[list-item]
                    {"key": "general.debug", "value": True},
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_domain_models.py:149: error: List item 1
has incompatible type "dict[str, str]"; expected "ConfigPatchItem"  [list-item]
                    {"key": "service.title", "value": "New Title"},
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_domain_models.py:214: error: Missing
named argument "branch" for "IngestionRequest"  [call-arg]
                valid_request = IngestionRequest(
                                ^
tests/unit/test_codestory_service/test_domain_models.py:214: error: Missing
named argument "dependencies" for "IngestionRequest"  [call-arg]
                valid_request = IngestionRequest(
                                ^
tests/unit/test_codestory_service/test_domain_models.py:214: error: Missing
named argument "config" for "IngestionRequest"  [call-arg]
                valid_request = IngestionRequest(
                                ^
tests/unit/test_codestory_service/test_domain_models.py:214: error: Missing
named argument "created_by" for "IngestionRequest"  [call-arg]
                valid_request = IngestionRequest(
                                ^
tests/unit/test_codestory_service/test_domain_models.py:214: error: Missing
named argument "description" for "IngestionRequest"  [call-arg]
                valid_request = IngestionRequest(
                                ^
tests/unit/test_codestory_service/test_domain_models.py:214: error: Missing
named argument "tags" for "IngestionRequest"  [call-arg]
                valid_request = IngestionRequest(
                                ^
tests/unit/test_codestory_service/test_domain_models.py:214: error: Missing
named argument "priority" for "IngestionRequest"  [call-arg]
                valid_request = IngestionRequest(
                                ^
tests/unit/test_codestory_service/test_domain_models.py:214: error: Missing
named argument "eta" for "IngestionRequest"  [call-arg]
                valid_request = IngestionRequest(
                                ^
tests/unit/test_codestory_service/test_domain_models.py:214: error: Missing
named argument "countdown" for "IngestionRequest"  [call-arg]
                valid_request = IngestionRequest(
                                ^
tests/unit/test_codestory_service/test_domain_models.py:222: error: Unsupported
right operand type for in ("dict[str, Any] | None")  [operator]
                assert "ignore_patterns" in valid_request.options
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_domain_models.py:223: error: Unsupported
right operand type for in ("list[str] | None")  [operator]
                assert "filesystem" in valid_request.steps
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_domain_models.py:227: error: Missing
named argument "branch" for "IngestionRequest"  [call-arg]
                    IngestionRequest(source_type=IngestionSourceType.LOCAL...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:227: error: Missing
named argument "steps" for "IngestionRequest"  [call-arg]
                    IngestionRequest(source_type=IngestionSourceType.LOCAL...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:227: error: Missing
named argument "dependencies" for "IngestionRequest"  [call-arg]
                    IngestionRequest(source_type=IngestionSourceType.LOCAL...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:227: error: Missing
named argument "config" for "IngestionRequest"  [call-arg]
                    IngestionRequest(source_type=IngestionSourceType.LOCAL...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:227: error: Missing
named argument "options" for "IngestionRequest"  [call-arg]
                    IngestionRequest(source_type=IngestionSourceType.LOCAL...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:227: error: Missing
named argument "created_by" for "IngestionRequest"  [call-arg]
                    IngestionRequest(source_type=IngestionSourceType.LOCAL...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:227: error: Missing
named argument "description" for "IngestionRequest"  [call-arg]
                    IngestionRequest(source_type=IngestionSourceType.LOCAL...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:227: error: Missing
named argument "tags" for "IngestionRequest"  [call-arg]
                    IngestionRequest(source_type=IngestionSourceType.LOCAL...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:227: error: Missing
named argument "priority" for "IngestionRequest"  [call-arg]
                    IngestionRequest(source_type=IngestionSourceType.LOCAL...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:227: error: Missing
named argument "eta" for "IngestionRequest"  [call-arg]
                    IngestionRequest(source_type=IngestionSourceType.LOCAL...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:227: error: Missing
named argument "countdown" for "IngestionRequest"  [call-arg]
                    IngestionRequest(source_type=IngestionSourceType.LOCAL...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:231: error: Missing
named argument "branch" for "IngestionRequest"  [call-arg]
                    IngestionRequest(
                    ^
tests/unit/test_codestory_service/test_domain_models.py:231: error: Missing
named argument "steps" for "IngestionRequest"  [call-arg]
                    IngestionRequest(
                    ^
tests/unit/test_codestory_service/test_domain_models.py:231: error: Missing
named argument "dependencies" for "IngestionRequest"  [call-arg]
                    IngestionRequest(
                    ^
tests/unit/test_codestory_service/test_domain_models.py:231: error: Missing
named argument "config" for "IngestionRequest"  [call-arg]
                    IngestionRequest(
                    ^
tests/unit/test_codestory_service/test_domain_models.py:231: error: Missing
named argument "options" for "IngestionRequest"  [call-arg]
                    IngestionRequest(
                    ^
tests/unit/test_codestory_service/test_domain_models.py:231: error: Missing
named argument "created_by" for "IngestionRequest"  [call-arg]
                    IngestionRequest(
                    ^
tests/unit/test_codestory_service/test_domain_models.py:231: error: Missing
named argument "description" for "IngestionRequest"  [call-arg]
                    IngestionRequest(
                    ^
tests/unit/test_codestory_service/test_domain_models.py:231: error: Missing
named argument "tags" for "IngestionRequest"  [call-arg]
                    IngestionRequest(
                    ^
tests/unit/test_codestory_service/test_domain_models.py:231: error: Missing
named argument "priority" for "IngestionRequest"  [call-arg]
                    IngestionRequest(
                    ^
tests/unit/test_codestory_service/test_domain_models.py:231: error: Missing
named argument "eta" for "IngestionRequest"  [call-arg]
                    IngestionRequest(
                    ^
tests/unit/test_codestory_service/test_domain_models.py:231: error: Missing
named argument "countdown" for "IngestionRequest"  [call-arg]
                    IngestionRequest(
                    ^
tests/unit/test_codestory_service/test_domain_models.py:252: error: Missing
named argument "error" for "StepProgress"  [call-arg]
            progress = StepProgress(
                       ^
tests/unit/test_codestory_service/test_domain_models.py:252: error: Missing
named argument "completed_at" for "StepProgress"  [call-arg]
            progress = StepProgress(
                       ^
tests/unit/test_codestory_service/test_domain_models.py:252: error: Missing
named argument "duration" for "StepProgress"  [call-arg]
            progress = StepProgress(
                       ^
tests/unit/test_codestory_service/test_domain_models.py:252: error: Missing
named argument "cpu_percent" for "StepProgress"  [call-arg]
            progress = StepProgress(
                       ^
tests/unit/test_codestory_service/test_domain_models.py:252: error: Missing
named argument "memory_mb" for "StepProgress"  [call-arg]
            progress = StepProgress(
                       ^
tests/unit/test_codestory_service/test_domain_models.py:252: error: Missing
named argument "retry_count" for "StepProgress"  [call-arg]
            progress = StepProgress(
                       ^
tests/unit/test_codestory_service/test_domain_models.py:252: error: Missing
named argument "last_error" for "StepProgress"  [call-arg]
            progress = StepProgress(
                       ^
tests/unit/test_cli/test_service_client.py:278: error: Cannot assign to a
method  [method-assign]
            client.execute_query = MagicMock()
            ^~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_service_client.py:303: error: Cannot assign to a
method  [method-assign]
            client.execute_query = MagicMock()
            ^~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_service_client.py:316: error: Cannot assign to a
method  [method-assign]
            client.execute_query = MagicMock()
            ^~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_service_client.py:328: error: Cannot assign to a
method  [method-assign]
            client.execute_query = MagicMock()
            ^~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_docgrapher_integration.py:42: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_docgrapher_integration.py:135: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_docgrapher_integration.py:326: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def mock_llm_client() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/base_pipeline_test.py:25: error: The
return type of a generator function should be "Generator" or one of its
supertypes  [misc]
        def setup_test_env(self, neo4j_connector: Any, redis_client: Any, ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/infrastructure/celery_adapter.py:177: error: Argument 1
to "int" has incompatible type "int | None"; expected
"str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc"  [arg-type]
                            eta = datetime.fromtimestamp(int(request.eta))
                                                             ^~~~~~~~~~~
src/codestory_service/infrastructure/celery_adapter.py:181: error: Argument 1
to "int" has incompatible type "int | None"; expected
"str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc"  [arg-type]
                    countdown = int(request.countdown)
                                    ^~~~~~~~~~~~~~~~~
src/codestory_service/infrastructure/celery_adapter.py:233: error:
"type[StepStatus]" has no attribute "UNKNOWN"  [attr-defined]
    ...            status=StepStatus(step.get("status", StepStatus.UNKNOWN)),
                                                        ^~~~~~~~~~~~~~~~~~
src/codestory_service/infrastructure/celery_adapter.py:250: error:
"type[StepStatus]" has no attribute "UNKNOWN"  [attr-defined]
    ...          status=StepStatus(result.get("status", StepStatus.UNKNOWN)),
                                                        ^~~~~~~~~~~~~~~~~~
src/codestory_service/infrastructure/celery_adapter.py:254: error: Argument 1
to "fromtimestamp" of "datetime" has incompatible type "Any | None"; expected
"float"  [arg-type]
    ...               started_at=datetime.fromtimestamp(result.get("start_tim...
                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/infrastructure/celery_adapter.py:255: error: Argument 1
to "fromtimestamp" of "datetime" has incompatible type "Any | None"; expected
"float"  [arg-type]
    ...             completed_at=datetime.fromtimestamp(result.get("end_time"...
                                                        ^~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/infrastructure/celery_adapter.py:294: error: Unexpected
keyword argument "cpu_percent" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:294: error: Unexpected
keyword argument "memory_mb" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:314: error: Unexpected
keyword argument "cpu_percent" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:314: error: Unexpected
keyword argument "memory_mb" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:332: error: Missing
named argument "source" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:332: error: Missing
named argument "source_type" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:332: error: Missing
named argument "branch" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:332: error: Missing
named argument "started_at" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:332: error: Missing
named argument "completed_at" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:332: error: Missing
named argument "duration" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:346: error: Missing
named argument "source" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:346: error: Missing
named argument "source_type" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:346: error: Missing
named argument "branch" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:346: error: Missing
named argument "started_at" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:346: error: Missing
named argument "completed_at" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:346: error: Missing
named argument "duration" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:346: error: Missing
named argument "steps" for "IngestionJob"  [call-arg]
                    return IngestionJob(
                           ^
src/codestory_service/infrastructure/celery_adapter.py:359: error: Missing
named argument "source" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:359: error: Missing
named argument "source_type" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:359: error: Missing
named argument "branch" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:359: error: Missing
named argument "started_at" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:359: error: Missing
named argument "completed_at" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:359: error: Missing
named argument "duration" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:359: error: Missing
named argument "steps" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:425: error: Missing
named argument "source" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:425: error: Missing
named argument "source_type" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:425: error: Missing
named argument "branch" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:425: error: Missing
named argument "started_at" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:425: error: Missing
named argument "completed_at" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:425: error: Missing
named argument "duration" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:425: error: Missing
named argument "steps" for "IngestionJob"  [call-arg]
                return IngestionJob(
                       ^
src/codestory_service/infrastructure/celery_adapter.py:475: error: Item
"list[JobStatus]" of "list[JobStatus] | None" has no attribute
"HTTP_500_INTERNAL_SERVER_ERROR"  [union-attr]
                    status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/infrastructure/celery_adapter.py:475: error: Item "None"
of "list[JobStatus] | None" has no attribute "HTTP_500_INTERNAL_SERVER_ERROR" 
[union-attr]
                    status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_infrastructure.py:78: error: Argument
"usage" to "EmbeddingResponse" has incompatible type "dict[str, int]"; expected
"UsageInfo"  [arg-type]
    ...ding_data, model='text-embedding-ada-002', usage={'prompt_tokens': 8, ...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:244: error:
"CeleryAdapter" has no attribute "_run_ingestion_pipeline"  [attr-defined]
            adapter._run_ingestion_pipeline = mock_app.tasks['run_ingestio...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_infrastructure.py:276: error: Missing
named argument "branch" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:276: error: Missing
named argument "steps" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:276: error: Missing
named argument "dependencies" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:276: error: Missing
named argument "config" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:276: error: Missing
named argument "options" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:276: error: Missing
named argument "created_by" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:276: error: Missing
named argument "description" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:276: error: Missing
named argument "tags" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:276: error: Missing
named argument "priority" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:276: error: Missing
named argument "eta" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:276: error: Missing
named argument "countdown" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:284: error: Missing
named argument "branch" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:284: error: Missing
named argument "dependencies" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:284: error: Missing
named argument "config" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:284: error: Missing
named argument "created_by" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:284: error: Missing
named argument "description" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:284: error: Missing
named argument "tags" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:284: error: Missing
named argument "priority" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:284: error: Missing
named argument "eta" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:284: error: Missing
named argument "countdown" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:328: error: No return
value expected  [return-value]
                return validator
                ^~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_full_pipeline_integration.py:22: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
        def setup_pipeline_manager(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_full_pipeline_integration.py:24: error:
"_create_pipeline_config_file" of "TestFullPipelineIntegration" does not return
a value (it only ever returns None)  [func-returns-value]
            self.config_file_path = self._create_pipeline_config_file()
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_full_pipeline_integration.py:35: error:
No return value expected  [return-value]
                return f.name
                ^~~~~~~~~~~~~
src/codestory_service/use_real_adapters.py:110: error: Incompatible types in
assignment (expression has type
"Callable[[], Coroutine[Any, Any, OpenAIAdapter]]", variable has type
"Callable[[], OpenAIAdapter]")  [assignment]
        openai_adapter.get_openai_adapter = get_real_openai_adapter  # TOD...
                                            ^~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/ingestion_service.py:65: error: Incompatible
types in assignment (expression has type "Redis", variable has type "None") 
[assignment]
                self.redis = redis.Redis(  # TODO: Fix type compatibility
                             ^
src/codestory_service/application/ingestion_service.py:70: error: "None" has no
attribute "ping"  [attr-defined]
                await self.redis.ping()[attr-defined]
                      ^~~~~~~~~~~~~~~
src/codestory_service/application/ingestion_service.py:70: error: Name "attr"
is not defined  [name-defined]
                await self.redis.ping()[attr-defined]
                                        ^
src/codestory_service/application/ingestion_service.py:70: error: Name
"defined" is not defined  [name-defined]
                await self.redis.ping()[attr-defined]
                                             ^
src/codestory_service/application/ingestion_service.py:90: error: Statement is
unreachable  [unreachable]
            try:
            ^
src/codestory_service/application/ingestion_service.py:121: error: Statement is
unreachable  [unreachable]
            try:
            ^
src/codestory_service/application/ingestion_service.py:195: error: "None" has
no attribute "set"  [attr-defined]
                    await self.redis.set(
                          ^~~~~~~~~~~~~~
src/codestory_service/application/ingestion_service.py:247: error: Argument
"timestamp" to "JobProgressEvent" has incompatible type "int | None"; expected
"float"  [arg-type]
                        timestamp=ingestion_started.eta if ingestion_start...
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/application/ingestion_service.py:324: error: Argument
"timestamp" to "JobProgressEvent" has incompatible type "int | None"; expected
"float"  [arg-type]
                    timestamp=job.updated_at if job.updated_at else None,
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/ingestion_service.py:384: error: Item
"list[JobStatus]" of "list[JobStatus] | None" has no attribute
"HTTP_500_INTERNAL_SERVER_ERROR"  [union-attr]
                    status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/ingestion_service.py:384: error: Item "None"
of "list[JobStatus] | None" has no attribute "HTTP_500_INTERNAL_SERVER_ERROR" 
[union-attr]
                    status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/ingestion_service.py:434: error: Function is
missing a return type annotation  [no-untyped-def]
            def summary_stats(values: Any):
            ^
src/codestory_service/application/ingestion_service.py:462: error: "None" has
no attribute "scan_iter"  [attr-defined]
            async for key in self.redis.scan_iter(match=pattern):
                             ^~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/ingestion_service.py:463: error: "None" has
no attribute "get"  [attr-defined]
                data = await self.redis.get(key)
                             ^~~~~~~~~~~~~~
src/codestory_service/application/ingestion_service.py:474: error: "None" has
no attribute "get"  [attr-defined]
                            dep_event = await self.redis.get(status_key)
                                              ^~~~~~~~~~~~~~
src/codestory_service/application/ingestion_service.py:487: error: "None" has
no attribute "delete"  [attr-defined]
                            await self.redis.delete(key)
                                  ^~~~~~~~~~~~~~~~~
src/codestory_service/api/health.py:63: error: Incompatible types in assignment
(expression has type "list[str]", variable has type "dict[str, Any] | None") 
[assignment]
                health_report.error_package = error_package
                                              ^~~~~~~~~~~~~
src/codestory_service/api/health.py:89: error: Missing named argument
"error_package" for "HealthReport"  [call-arg]
            return HealthReport(status='degraded', timestamp=time.strftime...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:92: error: Missing named argument
"error_package" for "HealthReport"  [call-arg]
            return HealthReport(status='unhealthy', timestamp=time.strftim...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:180: error: Incompatible types in
assignment (expression has type "dict[str, object]", target has type "str") 
[assignment]
            response['auth_details'] = {'tenant_id': tenant_id, 'scope': '...
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:191: error: Incompatible types in
assignment (expression has type "dict[str, str]", target has type "str") 
[assignment]
                    response['token_injection'] = {'status': 'failed', 'me...
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:216: error: Incompatible types in
assignment (expression has type "dict[str, str | None]", target has type "str") 
[assignment]
    ...                   response['token_injection'] = {'status': 'success',...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:218: error: Incompatible types in
assignment (expression has type "dict[str, str]", target has type "str") 
[assignment]
    ...                   response['token_injection'] = {'status': 'failed', ...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:224: error: Incompatible types in
assignment (expression has type "dict[str, str]", target has type "str") 
[assignment]
    ...                   response['token_injection'] = {'status': 'timeout',...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:227: error: Incompatible types in
assignment (expression has type "dict[str, str]", target has type "str") 
[assignment]
    ...                   response['token_injection'] = {'status': 'error', '...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:230: error: Incompatible types in
assignment (expression has type "dict[str, str]", target has type "str") 
[assignment]
                response['token_injection'] = {'status': 'error', 'message...
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:247: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        async def check_component_health(component_name, check_func, timeo...
        ^
src/codestory_service/api/health.py:250: error: Returning Any from function
declared to return "None"  [no-any-return]
                return result
                ^~~~~~~~~~~~~
src/codestory_service/api/health.py:253: error: No return value expected 
[return-value]
                return {'status': 'unhealthy', 'details': {'error': f'Heal...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:256: error: No return value expected 
[return-value]
                return {'status': 'unhealthy', 'details': {'error': str(e)...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:271: error: No return value expected 
[return-value]
                return {'status': 'healthy', 'details': {'connection': f'r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:276: error: No return value expected 
[return-value]
                return {'status': 'unhealthy', 'details': {'error': str(e)...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:278: error: Function does not return a
value (it only ever returns None)  [func-returns-value]
            redis_health = await asyncio.wait_for(check_redis_health(), ti...
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:286: error: Argument after ** must be a
mapping, not "None"  [arg-type]
        components = {'neo4j': ComponentHealth(**neo4j_health), 'celery': ...
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/api/health.py:286: error: Argument after ** must be a
mapping, not "dict[str, Collection[str]] | None"  [arg-type]
    ...nai': ComponentHealth(**openai_health), 'redis': ComponentHealth(**red...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:298: error: Missing named argument
"error_package" for "HealthReport"  [call-arg]
        return HealthReport(status=overall_status_literal, timestamp=time....
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/cli/commands/service.py:16: error: Name "click" already defined
(by an import)  [no-redef]
        import click
        ^
src/codestory/cli/commands/service.py:627: error: Incompatible types in
assignment (expression has type "CompletedProcess[str]", variable has type
"CompletedProcess[bytes]")  [assignment]
                    process = subprocess.run(  # TODO: Fix type compatibil...
                              ^
src/codestory/cli/commands/service.py:642: error: Argument 1 to "split" of
"bytes" has incompatible type "str"; expected "Buffer | None"  [arg-type]
    ...         c for c in process.stdout.strip().split("\n") if c and c in c...
                                                        ^~~~
src/codestory/cli/commands/service.py:835: error: Incompatible types in
assignment (expression has type "CompletedProcess[str]", variable has type
"CompletedProcess[bytes]")  [assignment]
                    process = subprocess.run(  # TODO: Fix type compatibil...
                              ^
src/codestory/cli/commands/service.py:853: error: Argument 1 to "split" of
"bytes" has incompatible type "str"; expected "Buffer | None"  [arg-type]
    ...                 error_lines = process.stderr.strip().split("\n")[-5:]
                                                                   ^~~~
src/codestory/cli/commands/service.py:856: error: If x = b'abc' then f"{x}" or
"{}".format(x) produces "b'abc'", not "abc". If this is desired behavior, use
f"{x!r}" or "{!r}".format(x). Otherwise, decode the bytes  [str-bytes-safe]
                                console.print(f"  {line}")
                                                  ^~~~~~
src/codestory/cli/commands/service.py:993: error: Incompatible types in
assignment (expression has type "CompletedProcess[str]", variable has type
"CompletedProcess[bytes]")  [assignment]
                    process = subprocess.run(  # TODO: Fix type compatibil...
                              ^
src/codestory/cli/commands/service.py:1010: error: Argument 1 to "split" of
"bytes" has incompatible type "str"; expected "Buffer | None"  [arg-type]
    ...                 error_lines = process.stderr.strip().split("\n")[-5:]
                                                                   ^~~~
src/codestory/cli/commands/service.py:1013: error: If x = b'abc' then f"{x}" or
"{}".format(x) produces "b'abc'", not "abc". If this is desired behavior, use
f"{x!r}" or "{!r}".format(x). Otherwise, decode the bytes  [str-bytes-safe]
                                console.print(f"  {line}")
                                                  ^~~~~~
src/codestory/cli/commands/ingest.py:26: error: No return value expected 
[return-value]
            return result.stdout if capture_output else None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:38: error: No return value expected 
[return-value]
            return 'codestory-service' in result.stdout
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:40: error: No return value expected 
[return-value]
            return False
            ^~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:69: error: No return value expected 
[return-value]
                            return True
                            ^~~~~~~~~~~
src/codestory/cli/commands/ingest.py:73: error: No return value expected 
[return-value]
                    return True
                    ^~~~~~~~~~~
src/codestory/cli/commands/ingest.py:88: error: No return value expected 
[return-value]
            return False
            ^~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:92: error: No return value expected 
[return-value]
            return False
            ^~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:106: error: No return value expected 
[return-value]
            return True
            ^~~~~~~~~~~
src/codestory/cli/commands/ingest.py:110: error: No return value expected 
[return-value]
            return False
            ^~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:122: error: No return value expected 
[return-value]
        return True
        ^~~~~~~~~~~
src/codestory/cli/commands/ingest.py:137: error: No return value expected 
[return-value]
                    return True
                    ^~~~~~~~~~~
src/codestory/cli/commands/ingest.py:147: error: No return value expected 
[return-value]
        return False
        ^~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:155: error: No return value expected 
[return-value]
            return False
            ^~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:158: error: "is_docker_running" does not
return a value (it only ever returns None)  [func-returns-value]
        if not is_docker_running():
               ^~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:164: error: No return value expected 
[return-value]
            return True
            ^~~~~~~~~~~
src/codestory/cli/commands/ingest.py:165: error: "is_repo_mounted" does not
return a value (it only ever returns None)  [func-returns-value]
        if not force_remount and is_repo_mounted(repo_path, console):
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:168: error: No return value expected 
[return-value]
            return True
            ^~~~~~~~~~~
src/codestory/cli/commands/ingest.py:177: error: "is_repo_mounted" does not
return a value (it only ever returns None)  [func-returns-value]
        verification = is_repo_mounted(repo_path, console)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:185: error: No return value expected 
[return-value]
        return True
        ^~~~~~~~~~~
src/codestory/cli/commands/ingest.py:239: error: "is_repo_mounted" does not
return a value (it only ever returns None)  [func-returns-value]
            is_mounted = is_repo_mounted(local_path)
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:256: error: "is_repo_mounted" does not
return a value (it only ever returns None)  [func-returns-value]
            elif not is_repo_mounted(local_path, console):
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:302: error: Statement is unreachable 
[unreachable]
                    console.print(f"[yellow]Warning: --eta value '{eta}' i...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/cli/commands/ingest.py:430: error: "is_docker_running" does not
return a value (it only ever returns None)  [func-returns-value]
            is_docker = is_docker_running()
                        ^~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:438: error: "is_repo_mounted" does not
return a value (it only ever returns None)  [func-returns-value]
        if not force_remount and is_repo_mounted(local_path, console):
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:441: error: "setup_repository_mount" does
not return a value (it only ever returns None)  [func-returns-value]
        if setup_repository_mount(local_path, console, force_remount):
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:486: error: No return value expected 
[return-value]
                return False
                ^~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:487: error: No return value expected 
[return-value]
            return True
            ^~~~~~~~~~~
tests/unit/test_codestory_service/test_application.py:86: error: Incompatible
types in assignment (expression has type "AsyncMock", variable has type "None") 
[assignment]
            service.redis = mock.AsyncMock()
                            ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_application.py:118: error: List item 0
has incompatible type "dict[str, object]"; expected "ConfigPatchItem" 
[list-item]
            patch = ConfigPatch(items=[{'key': 'general.debug', 'value': F...
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:192: error: Incompatible
types in assignment (expression has type "AsyncMock", variable has type "None") 
[assignment]
            service.redis = mock.AsyncMock()
                            ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_application.py:200: error: Missing named
argument "branch" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:200: error: Missing named
argument "steps" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:200: error: Missing named
argument "dependencies" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:200: error: Missing named
argument "config" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:200: error: Missing named
argument "options" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:200: error: Missing named
argument "created_by" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:200: error: Missing named
argument "description" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:200: error: Missing named
argument "tags" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:200: error: Missing named
argument "priority" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:200: error: Missing named
argument "eta" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:200: error: Missing named
argument "countdown" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_commands/test_repository_mounting.py:53: error:
"is_repo_mounted" does not return a value (it only ever returns None) 
[func-returns-value]
                result = ingest.is_repo_mounted("/test/repo", console=None...
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_commands/test_repository_mounting.py:73: error:
"is_repo_mounted" does not return a value (it only ever returns None) 
[func-returns-value]
                    result = ingest.is_repo_mounted("/test/repo", console=...
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_commands/test_repository_mounting.py:102: error:
"setup_repository_mount" does not return a value (it only ever returns None) 
[func-returns-value]
                                        result = ingest.setup_repository_m...
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_commands/test_repository_mounting.py:133: error:
"setup_repository_mount" does not return a value (it only ever returns None) 
[func-returns-value]
                                        result = ingest.setup_repository_m...
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_commands/test_repository_mounting.py:155: error:
"create_override_file" does not return a value (it only ever returns None) 
[func-returns-value]
                    result = ingest.create_override_file(temp_dir, console...
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:216: error:
Argument "started_at" to "IngestionStarted" has incompatible type "None";
expected "datetime"  [arg-type]
    ...tus.COMPLETED, source=request.source, started_at=None, steps=request.s...
                                                        ^~~~
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:224: error:
Argument 1 to "IngestionService" has incompatible type "MockCeleryAdapter";
expected "CeleryAdapter"  [arg-type]
        service = IngestionService(MockCeleryAdapter())
                                   ^~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:225: error:
Missing named argument "branch" for "IngestionRequest"  [call-arg]
        req_a = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:225: error:
Missing named argument "config" for "IngestionRequest"  [call-arg]
        req_a = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:225: error:
Missing named argument "options" for "IngestionRequest"  [call-arg]
        req_a = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:225: error:
Missing named argument "created_by" for "IngestionRequest"  [call-arg]
        req_a = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:225: error:
Missing named argument "description" for "IngestionRequest"  [call-arg]
        req_a = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:225: error:
Missing named argument "tags" for "IngestionRequest"  [call-arg]
        req_a = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:225: error:
Missing named argument "priority" for "IngestionRequest"  [call-arg]
        req_a = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:225: error:
Missing named argument "eta" for "IngestionRequest"  [call-arg]
        req_a = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:225: error:
Missing named argument "countdown" for "IngestionRequest"  [call-arg]
        req_a = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:225: error:
Argument "source_type" to "IngestionRequest" has incompatible type "str";
expected "IngestionSourceType"  [arg-type]
        req_a = IngestionRequest(source_type='local_path', source=sample_r...
                                             ^~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:228: error:
Missing named argument "branch" for "IngestionRequest"  [call-arg]
        req_b = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:228: error:
Missing named argument "config" for "IngestionRequest"  [call-arg]
        req_b = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:228: error:
Missing named argument "options" for "IngestionRequest"  [call-arg]
        req_b = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:228: error:
Missing named argument "created_by" for "IngestionRequest"  [call-arg]
        req_b = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:228: error:
Missing named argument "description" for "IngestionRequest"  [call-arg]
        req_b = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:228: error:
Missing named argument "tags" for "IngestionRequest"  [call-arg]
        req_b = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:228: error:
Missing named argument "priority" for "IngestionRequest"  [call-arg]
        req_b = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:228: error:
Missing named argument "eta" for "IngestionRequest"  [call-arg]
        req_b = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:228: error:
Missing named argument "countdown" for "IngestionRequest"  [call-arg]
        req_b = IngestionRequest(source_type='local_path', source=sample_r...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:228: error:
Argument "source_type" to "IngestionRequest" has incompatible type "str";
expected "IngestionSourceType"  [arg-type]
        req_b = IngestionRequest(source_type='local_path', source=sample_r...
                                             ^~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:235: error:
Statement is unreachable  [unreachable]
            waiting_key = f'codestory:ingestion:waiting:{job_b_id}'
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_repository_mounting.py:35: error: The return
type of a generator function should be "Generator" or one of its supertypes 
[misc]
    def temp_repository() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_repository_mounting.py:65: error: The return
type of a generator function should be "Generator" or one of its supertypes 
[misc]
    def stop_containers() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_repository_mounting.py:330: error: "IO[str]"
has no attribute "getvalue"  [attr-defined]
                output = console.file.getvalue()
                         ^~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/main.py:6: error: Skipping analyzing "click_didyoumean":
module is installed, but missing library stubs or py.typed marker 
[import-untyped]
    from click_didyoumean import DYMGroup
    ^
src/codestory/cli/main.py:6: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
src/codestory/cli/main.py:35: error: Returning Any from function declared to
return "None"  [no-any-return]
                return super().__call__(*args, **kwargs)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/main.py:116: error: Returning Any from function declared to
return "None"  [no-any-return]
                return original_main(*args, **kwargs)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/main.py:175: error: Cannot assign to a method 
[method-assign]
            click.exceptions.UsageError.show = custom_error_callback
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/main.py:185: error: Cannot assign to a method 
[method-assign]
            click.exceptions.UsageError.show = original_error_callback
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_api.py:26: error: Missing named argument
"branch" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:26: error: Missing named argument
"steps" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:26: error: Missing named argument
"dependencies" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:26: error: Missing named argument
"config" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:26: error: Missing named argument
"options" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:26: error: Missing named argument
"created_by" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:26: error: Missing named argument
"description" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:26: error: Missing named argument
"tags" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:26: error: Missing named argument
"priority" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:26: error: Missing named argument
"eta" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:26: error: Missing named argument
"countdown" for "IngestionRequest"  [call-arg]
            request = IngestionRequest(source_type=IngestionSourceType.LOC...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:133: error: List item 0 has
incompatible type "dict[str, object]"; expected "ConfigPatchItem"  [list-item]
            patch = ConfigPatch(items=[{'key': 'general.debug', 'value': F...
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_api.py:166: error: Missing named
argument "email" for "UserInfo"  [call-arg]
    ...       mock_service.get_user_info.return_value = UserInfo(id='user123'...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_main.py:13: error: Argument 1 to "contextmanager" has
incompatible type "Callable[[], None]"; expected "Callable[[], Iterator[Never]]"
 [arg-type]
    @contextmanager
     ^
tests/unit/test_cli/test_main.py:14: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def custom_error_handler() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_main.py:21: error: Cannot assign to a method 
[method-assign]
            click.Context.fail = MagicMock()
            ^~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_main.py:26: error: Cannot assign to a method 
[method-assign]
            click.Context.fail = original_error_callback
            ^~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_main.py:181: error: Statement is unreachable 
[unreachable]
                click.Context.fail.assert_called_once_with(mock_ctx, "Some...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_main.py:184: error: Statement is unreachable 
[unreachable]
            assert click.Context.fail == original_fail
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_commands/test_ingest.py:258: error: "is_repo_mounted"
does not return a value (it only ever returns None)  [func-returns-value]
                result = ingest.is_repo_mounted("/fake/repo", mock_console...
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_commands/test_ingest.py:278: error: "is_repo_mounted"
does not return a value (it only ever returns None)  [func-returns-value]
                result = ingest.is_repo_mounted("/fake/repo", mock_console...
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_commands/test_ingest.py:310: error:
"setup_repository_mount" does not return a value (it only ever returns None) 
[func-returns-value]
                                        result = ingest.setup_repository_m...
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_commands/test_ingest.py:333: error:
"setup_repository_mount" does not return a value (it only ever returns None) 
[func-returns-value]
                                        result = ingest.setup_repository_m...
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_filesystem_ingestion_e2e.py:175: error: Function
"builtins.any" is not valid as a type  [valid-type]
    ...lidate_graph_structure(self, repository_path: Path) -> Dict[str, any]:
                                                                        ^
tests/integration/test_filesystem_ingestion_e2e.py:175: note: Perhaps you meant "typing.Any" instead of "any"?
tests/integration/test_filesystem_ingestion_e2e.py:181: error: "Neo4jConnector"
has no attribute "get_async_session"; maybe "get_session"?  [attr-defined]
                async with self.connector.get_async_session() as session:
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_filesystem_ingestion_e2e.py:189: error: Unsupported
operand types for + ("object" and "int")  [operator]
                        validation_results['file_nodes'] += 1
                        ^
tests/integration/test_filesystem_ingestion_e2e.py:193: error: Unsupported
operand types for + ("object" and "int")  [operator]
                        validation_results['directory_nodes'] += 1
                        ^
tests/integration/test_filesystem_ingestion_e2e.py:197: error: Unsupported
operand types for + ("object" and "int")  [operator]
                        validation_results['repository_nodes'] += 1
                        ^
tests/integration/test_filesystem_ingestion_e2e.py:212: error: "object" has no
attribute "append"  [attr-defined]
                        validation_results['ignored_files_present'].append...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_filesystem_ingestion_e2e.py:218: error: "Neo4jConnector"
has no attribute "get_async_session"; maybe "get_session"?  [attr-defined]
                async with self.connector.get_async_session() as session:
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_filesystem_ingestion_e2e.py:225: error: "object" has no
attribute "append"  [attr-defined]
                validation_results['errors'].append(f'Graph validation fai...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_filesystem_ingestion_e2e.py:254: error: The return type
of an async generator function should be "AsyncGenerator" or one of its
supertypes  [misc]
        async def setup_and_cleanup(self) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_ingest_integration.py:189: error:
"is_docker_running" does not return a value (it only ever returns None) 
[func-returns-value]
            if not is_docker_running():
                   ^~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_ingest_integration.py:210: error:
"is_repo_mounted" does not return a value (it only ever returns None) 
[func-returns-value]
                assert is_repo_mounted(temp_dir)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_ingest_integration.py:217: error:
"is_docker_running" does not return a value (it only ever returns None) 
[func-returns-value]
            if not is_docker_running():
                   ^~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_ingest_integration.py:243: error:
"is_repo_mounted" does not return a value (it only ever returns None) 
[func-returns-value]
                assert is_repo_mounted(temp_dir)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_clear_database.py:20: error: The return
type of a generator function should be "Generator" or one of its supertypes 
[misc]
    def test_client(mock_graph_service: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_service.py:18: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def test_client() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_config_api.py:18: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_config_api.py:32: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def test_client(neo4j_connector: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_config_api.py:53: error: Argument 1 to
"asynccontextmanager" has incompatible type "Callable[[Any], None]"; expected
"Callable[[Any], AsyncIterator[Never]]"  [arg-type]
        @asynccontextmanager
         ^
tests/integration/test_config_api.py:54: error: The return type of an async
generator function should be "AsyncGenerator" or one of its supertypes  [misc]
        async def test_lifespan(app) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Found 970 errors in 100 files (checked 225 source files)
