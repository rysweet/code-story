version: '3.8'

services:
  neo4j:
    image: neo4j:5.20.0
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/import
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2.4-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  service:
    build:
      context: .
      dockerfile: infra/docker/service.Dockerfile
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URI=redis://redis:6379
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8000
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./prompts:/app/prompts
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: infra/docker/worker.Dockerfile
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URI=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./prompts:/app/prompts

  mcp:
    build:
      context: .
      dockerfile: infra/docker/mcp.Dockerfile
    environment:
      - CODE_STORY_SERVICE_URL=http://service:8000
      - AUTH_ENABLED=${AUTH_ENABLED:-false}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8001
      - MCP_WORKERS=4
      - MCP_DEBUG=${MCP_DEBUG:-false}
    ports:
      - "8001:8001"
    depends_on:
      service:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  gui:
    build:
      context: .
      dockerfile: infra/docker/gui.Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./gui:/app/gui
      - node_modules:/app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - service

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  redis_data:
  node_modules: