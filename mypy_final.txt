src/codestory/llm/metrics.py:164: error: Returning Any from function declared
to return "None"  [no-any-return]
                    return result
                    ^~~~~~~~~~~~~
src/codestory/llm/metrics.py:202: error: Returning Any from function declared
to return "None"  [no-any-return]
                    return result
                    ^~~~~~~~~~~~~
src/codestory/ingestion_pipeline/utils.py:96: error: "_get_or_create_counter"
does not return a value (it only ever returns None)  [func-returns-value]
    INGESTION_JOB_COUNT = _get_or_create_counter('codestory_ingestion_jobs...
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/ingestion_pipeline/utils.py:97: error: "_get_or_create_counter"
does not return a value (it only ever returns None)  [func-returns-value]
    INGESTION_STEP_COUNT = _get_or_create_counter('codestory_ingestion_ste...
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/ingestion_pipeline/utils.py:98: error: "_get_or_create_histogram"
does not return a value (it only ever returns None)  [func-returns-value]
    INGESTION_STEP_DURATION = _get_or_create_histogram('codestory_ingestio...
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/ingestion_pipeline/utils.py:99: error: "_get_or_create_gauge"
does not return a value (it only ever returns None)  [func-returns-value]
    INGESTION_ACTIVE_JOBS = _get_or_create_gauge('codestory_ingestion_acti...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/graphdb/metrics.py:50: error: Returning Any from function
declared to return "DummyHistogram"  [no-any-return]
            return self
            ^~~~~~~~~~~
src/codestory/graphdb/metrics.py:60: error: Unused "type: ignore" comment 
[unused-ignore]
        @contextmanager  # type: ignore[assignment]
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/metrics.py:60: error: Argument 1 to "contextmanager" has
incompatible type "Callable[[Any], None]"; expected
"Callable[[Any], Iterator[Never]]"  [arg-type]
        @contextmanager  # type: ignore[assignment]
         ^
src/codestory/graphdb/metrics.py:60: note: Error code "arg-type" not covered by "type: ignore" comment
src/codestory/graphdb/metrics.py:61: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
        def time(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/metrics.py:126: error: Returning Any from function
declared to return "None"  [no-any-return]
                    return func(*args, **kwargs)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/metrics.py:132: error: Returning Any from function
declared to return "None"  [no-any-return]
                    return result
                    ^~~~~~~~~~~~~
tests/unit/test_llm/test_metrics.py:8: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def mock_all_metrics_objects() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_docker_connectivity.py:13: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def worker_container(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_demos/test_mcp_demo.py:17: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def setup_mcp() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_demos/test_cli_demo.py:15: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def setup_test_env() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_demos/test_gui_demo.py:17: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def setup_gui() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~
src/codestory_summarizer/models.py:140: error: Returning Any from function
declared to return "float"  [no-any-return]
            return processed / self.total_count * 100.0
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/domain/ingestion.py:123: error: Returning Any from
function declared to return "IngestionRequest"  [no-any-return]
            return self
            ^~~~~~~~~~~
src/codestory_service/domain/ingestion.py:208: error: Returning Any from
function declared to return "IngestionJob"  [no-any-return]
            return self
            ^~~~~~~~~~~
src/codestory_service/domain/config.py:65: error: Returning Any from function
declared to return "bool"  [no-any-return]
            return self.metadata.type == ConfigValueType.SECRET or self.me...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/domain/config.py:70: error: Returning Any from function
declared to return "ConfigItem"  [no-any-return]
                return self
                ^~~~~~~~~~~
src/codestory_service/domain/config.py:169: error: Returning Any from function
declared to return "ConfigSchema"  [no-any-return]
            return cls(json_schema=json_schema, ui_schema=ui_schema)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/models.py:132: error: Returning Any from function
declared to return "float"  [no-any-return]
            return self.processed_files / self.total_files * 100.0
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/models.py:180: error: Returning Any from function declared to
return "LLMConfiguration"  [no-any-return]
            return cls(mode=mode, provider=provider, allow_fallback=allow_...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/graphdb/models.py:47: error: Returning Any from function declared
to return "dict[str, Any]"  [no-any-return]
            return result
            ^~~~~~~~~~~~~
src/codestory/graphdb/models.py:66: error: Returning Any from function declared
to return "dict[str, Any]"  [no-any-return]
            return result
            ^~~~~~~~~~~~~
tests/unit/test_llm/test_llm_models.py:24: error: Statement is unreachable 
[unreachable]
        assert ChatRole.USER == "user"
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_llm_models.py:46: error: Argument 1 to "ChatMessage"
has incompatible type "**dict[str, str]"; expected "ChatRole"  [arg-type]
        message = ChatMessage(**message_dict)
                                ^~~~~~~~~~~~
tests/unit/test_llm/test_llm_models.py:73: error: Item "None" of
"ChatFunctionCall | None" has no attribute "name"  [union-attr]
        assert message.function_call.name == "get_weather"
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_llm_models.py:203: error: Item "None" of
"UsageInfo | None" has no attribute "total_tokens"  [union-attr]
        assert response.usage.total_tokens == 18
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_llm_models.py:225: error: Item "None" of
"UsageInfo | None" has no attribute "prompt_tokens"  [union-attr]
        assert response.usage.prompt_tokens == 15
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_models.py:30: error: Statement is unreachable 
[unreachable]
        assert NodeType.DIRECTORY == "Directory"
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_models.py:42: error: Statement is unreachable 
[unreachable]
        assert RelationshipType.IMPORTS == "IMPORTS"
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_domain_models.py:69: error: List item 0
has incompatible type "dict[str, object]"; expected "ConfigPatchItem" 
[list-item]
            valid_patch = ConfigPatch(items=[{'key': 'general.debug', 'val...
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:69: error: List item 1
has incompatible type "dict[str, str]"; expected "ConfigPatchItem"  [list-item]
    ...(items=[{'key': 'general.debug', 'value': True}, {'key': 'service.titl...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_domain_models.py:115: error: Unsupported
right operand type for in ("dict[str, Any] | None")  [operator]
                assert 'ignore_patterns' in valid_request.options
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_domain_models.py:116: error: Unsupported
right operand type for in ("list[str] | None")  [operator]
                assert 'filesystem' in valid_request.steps
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_summarizer/utils/progress_tracker.py:50: error: Returning Any
from function declared to return "float"  [no-any-return]
            return self.graph.get_progress()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_summarizer/utils/progress_tracker.py:58: error: Returning Any
from function declared to return "float"  [no-any-return]
            return time.time() - self.start_time
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_summarizer/utils/progress_tracker.py:72: error: Returning Any
from function declared to return "float | None"  [no-any-return]
            return max(0, remaining)
            ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/progress_tracker.py:62: error: Returning Any
from function declared to return "float"  [no-any-return]
            return min(self.processed_documents / self.total_documents * 1...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_docgrapher/utils/progress_tracker.py:70: error: Returning Any
from function declared to return "float"  [no-any-return]
            return time.time() - self.start_time
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/progress_tracker.py:84: error: Returning Any
from function declared to return "float | None"  [no-any-return]
            return max(0, remaining)
            ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/parsers/parser_factory.py:64: error: Returning Any
from function declared to return "Parser | None"  [no-any-return]
            return parser_class()
            ^~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/backoff.py:26: error: Item "None" of "Future | None" has no
attribute "exception"  [union-attr]
        exception = retry_state.outcome.exception()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/backoff.py:37: error: Item "None" of "Future | None" has no
attribute "exception"  [union-attr]
        exception = retry_state.outcome.exception()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/backoff.py:41: error: Item "None" of "RetryAction | None" has
no attribute "sleep"  [union-attr]
        wait_time = retry_state.next_action.sleep
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/backoff.py:67: error: Returning Any from function declared to
return "None"  [no-any-return]
                    return func(*args, **kwargs)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/backoff.py:118: error: Returning Any from function declared
to return "None"  [no-any-return]
                    return await func(*args, **kwargs)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_backoff.py:11: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def mock_all_prometheus() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_backoff.py:142: error: "RateLimitError" has no
attribute "headers"  [attr-defined]
                    e.headers = {'retry-after': '30'}
                    ^~~~~~~~~
src/codestory_docgrapher/parsers/docstring_parser.py:56: error: Name
"docstrings" already defined on line 50  [no-redef]
                docstrings: list[Any] = [][no - redef]
                ^
src/codestory_docgrapher/parsers/docstring_parser.py:56: error: Name "no" is
not defined  [name-defined]
                docstrings: list[Any] = [][no - redef]
                                           ^
src/codestory_docgrapher/parsers/docstring_parser.py:56: error: Name "redef" is
not defined  [name-defined]
                docstrings: list[Any] = [][no - redef]
                                                ^
src/codestory_docgrapher/parsers/docstring_parser.py:266: error: Name
"param_section" already defined on line 260  [no-redef]
                        param_section: list[Any] = [][no - redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:266: error: Name "no" is
not defined  [name-defined]
                        param_section: list[Any] = [][no - redef]
                                                      ^
src/codestory_docgrapher/parsers/docstring_parser.py:266: error: Name "redef"
is not defined  [name-defined]
                        param_section: list[Any] = [][no - redef]
                                                           ^
src/codestory_docgrapher/parsers/docstring_parser.py:275: error: Name
"param_section" already defined on line 260  [no-redef]
                        param_section: list[Any] = [][no - redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:275: error: Name "no" is
not defined  [name-defined]
                        param_section: list[Any] = [][no - redef]
                                                      ^
src/codestory_docgrapher/parsers/docstring_parser.py:275: error: Name "redef"
is not defined  [name-defined]
                        param_section: list[Any] = [][no - redef]
                                                           ^
src/codestory_docgrapher/parsers/docstring_parser.py:301: error: Name
"return_section" already defined on line 295  [no-redef]
                        return_section: list[Any] = [][no - redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:301: error: Name "no" is
not defined  [name-defined]
                        return_section: list[Any] = [][no - redef]
                                                       ^
src/codestory_docgrapher/parsers/docstring_parser.py:301: error: Name "redef"
is not defined  [name-defined]
                        return_section: list[Any] = [][no - redef]
                                                            ^
src/codestory_docgrapher/parsers/docstring_parser.py:310: error: Name
"return_section" already defined on line 295  [no-redef]
                        return_section: list[Any] = [][no - redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:310: error: Name "no" is
not defined  [name-defined]
                        return_section: list[Any] = [][no - redef]
                                                       ^
src/codestory_docgrapher/parsers/docstring_parser.py:310: error: Name "redef"
is not defined  [name-defined]
                        return_section: list[Any] = [][no - redef]
                                                            ^
src/codestory_docgrapher/parsers/docstring_parser.py:336: error: Name
"raises_section" already defined on line 330  [no-redef]
                        raises_section: list[Any] = [][no - redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:336: error: Name "no" is
not defined  [name-defined]
                        raises_section: list[Any] = [][no - redef]
                                                       ^
src/codestory_docgrapher/parsers/docstring_parser.py:336: error: Name "redef"
is not defined  [name-defined]
                        raises_section: list[Any] = [][no - redef]
                                                            ^
src/codestory_docgrapher/parsers/docstring_parser.py:345: error: Name
"raises_section" already defined on line 330  [no-redef]
                        raises_section: list[Any] = [][no - redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:345: error: Name "no" is
not defined  [name-defined]
                        raises_section: list[Any] = [][no - redef]
                                                       ^
src/codestory_docgrapher/parsers/docstring_parser.py:345: error: Name "redef"
is not defined  [name-defined]
                        raises_section: list[Any] = [][no - redef]
                                                            ^
src/codestory_docgrapher/parsers/docstring_parser.py:371: error: Name
"example_section" already defined on line 365  [no-redef]
                        example_section: list[Any] = [][no - redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:371: error: Name "no" is
not defined  [name-defined]
                        example_section: list[Any] = [][no - redef]
                                                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:371: error: Name "redef"
is not defined  [name-defined]
                        example_section: list[Any] = [][no - redef]
                                                             ^
src/codestory_docgrapher/parsers/docstring_parser.py:380: error: Name
"example_section" already defined on line 365  [no-redef]
                        example_section: list[Any] = [][no - redef]
                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:380: error: Name "no" is
not defined  [name-defined]
                        example_section: list[Any] = [][no - redef]
                                                        ^
src/codestory_docgrapher/parsers/docstring_parser.py:380: error: Name "redef"
is not defined  [name-defined]
                        example_section: list[Any] = [][no - redef]
                                                             ^
src/codestory/config/settings.py:87: error: Returning Any from function
declared to return "IngestionSettings"  [no-any-return]
            return self
            ^~~~~~~~~~~
tests/integration/test_config.py:58: error: Argument "api_key" to
"OpenAISettings" has incompatible type "str"; expected "SecretStr | None" 
[arg-type]
            api_key="sk-test-key-openai",  # Fake key for testing  # type:...
                    ^~~~~~~~~~~~~~~~~~~~
tests/integration/test_config.py:67: error: Argument "api_key" to
"AzureOpenAISettings" has incompatible type "str"; expected "SecretStr | None" 
[arg-type]
            api_key="test-azure-key",  # Fake key for testing  # type: ign...
                    ^~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:22: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:124: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
        result = custom_process_filesystem(repository_path=sample_repo, jo...
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:157: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
        result = custom_process_filesystem(repository_path=sample_repo, jo...
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_direct.py:167: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
        update_result = custom_process_filesystem(repository_path=sample_r...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_mcp/auth/scope_manager.py:22: error: Returning Any from function
declared to return "list[str]"  [no-any-return]
            return self.settings.required_scopes
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/auth/scope_manager.py:49: error: Returning Any from function
declared to return "bool"  [no-any-return]
            return self.has_required_scope(scopes)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:197: error: Unused "type: ignore" comment 
[unused-ignore]
                self._sync_client = AzureOpenAI(**azure_openai_kwargs)  # ...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/llm/client.py:197: error: Argument 1 to "AzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected "str"  [arg-type]
                self._sync_client = AzureOpenAI(**azure_openai_kwargs)  # ...
                                                  ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:197: note: Error code "arg-type" not covered by "type: ignore" comment
src/codestory/llm/client.py:197: error: Argument 1 to "AzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected
"Callable[[], str] | None"  [arg-type]
                self._sync_client = AzureOpenAI(**azure_openai_kwargs)  # ...
                                                  ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:197: error: Argument 1 to "AzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected
"float | Timeout | NotGiven | None"  [arg-type]
                self._sync_client = AzureOpenAI(**azure_openai_kwargs)  # ...
                                                  ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:197: error: Argument 1 to "AzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected "int"  [arg-type]
                self._sync_client = AzureOpenAI(**azure_openai_kwargs)  # ...
                                                  ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:197: error: Argument 1 to "AzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected
"Mapping[str, str] | None"  [arg-type]
                self._sync_client = AzureOpenAI(**azure_openai_kwargs)  # ...
                                                  ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:197: error: Argument 1 to "AzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected
"Mapping[str, object] | None"  [arg-type]
                self._sync_client = AzureOpenAI(**azure_openai_kwargs)  # ...
                                                  ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:197: error: Argument 1 to "AzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected "Client | None" 
[arg-type]
                self._sync_client = AzureOpenAI(**azure_openai_kwargs)  # ...
                                                  ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:197: error: Argument 1 to "AzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected "bool"  [arg-type]
                self._sync_client = AzureOpenAI(**azure_openai_kwargs)  # ...
                                                  ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:199: error: Unused "type: ignore" comment 
[unused-ignore]
                self._async_client = AsyncAzureOpenAI(**azure_openai_kwarg...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/llm/client.py:199: error: Argument 1 to "AsyncAzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected "str"  [arg-type]
    ...         self._async_client = AsyncAzureOpenAI(**azure_openai_kwargs) ...
                                                        ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:199: note: Error code "arg-type" not covered by "type: ignore" comment
src/codestory/llm/client.py:199: error: Argument 1 to "AsyncAzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected
"Callable[[], str | Awaitable[str]] | None"  [arg-type]
    ...         self._async_client = AsyncAzureOpenAI(**azure_openai_kwargs) ...
                                                        ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:199: error: Argument 1 to "AsyncAzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected
"float | Timeout | NotGiven | None"  [arg-type]
    ...         self._async_client = AsyncAzureOpenAI(**azure_openai_kwargs) ...
                                                        ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:199: error: Argument 1 to "AsyncAzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected "int"  [arg-type]
    ...         self._async_client = AsyncAzureOpenAI(**azure_openai_kwargs) ...
                                                        ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:199: error: Argument 1 to "AsyncAzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected
"Mapping[str, str] | None"  [arg-type]
    ...         self._async_client = AsyncAzureOpenAI(**azure_openai_kwargs) ...
                                                        ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:199: error: Argument 1 to "AsyncAzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected
"Mapping[str, object] | None"  [arg-type]
    ...         self._async_client = AsyncAzureOpenAI(**azure_openai_kwargs) ...
                                                        ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:199: error: Argument 1 to "AsyncAzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected "AsyncClient | None"
 [arg-type]
    ...         self._async_client = AsyncAzureOpenAI(**azure_openai_kwargs) ...
                                                        ^~~~~~~~~~~~~~~~~~~
src/codestory/llm/client.py:199: error: Argument 1 to "AsyncAzureOpenAI" has
incompatible type "**dict[str, Any | str | None]"; expected "bool"  [arg-type]
    ...         self._async_client = AsyncAzureOpenAI(**azure_openai_kwargs) ...
                                                        ^~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/neo4j_connector.py:20: error: Name "get_settings" already
defined (possibly by an import)  [no-redef]
        get_settings: Union[Callable[[], Any], None] = None
        ^
src/codestory/graphdb/neo4j_connector.py:82: error: Returning Any from function
declared to return "None"  [no-any-return]
                        return func(*args, **kwargs)
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/neo4j_connector.py:191: error: Returning Any from
function declared to return "Neo4jConnector"  [no-any-return]
            return self
            ^~~~~~~~~~~
src/codestory/graphdb/neo4j_connector.py:432: error: Returning Any from
function declared to return "list[dict[str, Any]]"  [no-any-return]
                return result
                ^~~~~~~~~~~~~
src/codestory/graphdb/neo4j_connector.py:521: error: Returning Any from
function declared to return "None"  [no-any-return]
                    return func(self, **kwargs)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/neo4j_connector.py:529: error: Returning Any from
function declared to return "None"  [no-any-return]
                    return result
                    ^~~~~~~~~~~~~
src/codestory/graphdb/neo4j_connector.py:556: error: Returning Any from
function declared to return "None"  [no-any-return]
                    return self.driver.session.return_value
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/graphdb/neo4j_connector.py:557: error: Returning Any from
function declared to return "None"  [no-any-return]
                return self.driver.session(database=self.database)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/conftest.py:78: error: The return type of a generator function should be
"Generator" or one of its supertypes  [misc]
    def neo4j_connector(test_databases: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/conftest.py:96: error: The return type of a generator function should be
"Generator" or one of its supertypes  [misc]
    def redis_client(test_databases: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:12: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def patch_prometheus_metrics() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:18: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def mock_settings() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:35: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def client() -> None:
    ^~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:130: error: Need type annotation for
"future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:177: error: Item "None" of
"UsageInfo | None" has no attribute "prompt_tokens"  [union-attr]
                assert result.usage.prompt_tokens == 5
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:178: error: Item "None" of
"UsageInfo | None" has no attribute "completion_tokens"  [union-attr]
                assert result.usage.completion_tokens == 7
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:179: error: Item "None" of
"UsageInfo | None" has no attribute "total_tokens"  [union-attr]
                assert result.usage.total_tokens == 12
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:198: error: Item "None" of
"UsageInfo | None" has no attribute "prompt_tokens"  [union-attr]
                assert result.usage.prompt_tokens == 15
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:199: error: Item "None" of
"UsageInfo | None" has no attribute "completion_tokens"  [union-attr]
                assert result.usage.completion_tokens == 12
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:200: error: Item "None" of
"UsageInfo | None" has no attribute "total_tokens"  [union-attr]
                assert result.usage.total_tokens == 27
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:242: error: Need type annotation for
"future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:250: error: Item "None" of
"UsageInfo | None" has no attribute "prompt_tokens"  [union-attr]
                assert result.usage.prompt_tokens == 5
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:251: error: Item "None" of
"UsageInfo | None" has no attribute "completion_tokens"  [union-attr]
                assert result.usage.completion_tokens == 7
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_llm/test_client.py:252: error: Item "None" of
"UsageInfo | None" has no attribute "total_tokens"  [union-attr]
                assert result.usage.total_tokens == 12
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_schema.py:20: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def mock_prometheus_metrics() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_connector.py:36: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def connector(mock_driver: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_connector.py:44: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def async_connector(mock_async_driver: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_graphdb/test_connector.py:99: error: Need type annotation for
"params_list"  [var-annotated]
        params_list = [{}, {}]
                      ^~~~~~~~
tests/unit/test_config/test_settings_imports.py:61: error: Item "None" of
"SecretStr | None" has no attribute "get_secret_value"  [union-attr]
        assert settings.openai.api_key.get_secret_value() == "sk-test-key-...
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/conftest.py:72: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def mock_settings() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/conftest.py:155: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/conftest.py:187: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def redis_client() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/conftest.py:208: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def celery_app(redis_client: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_llm/conftest.py:43: error: Incompatible types in
assignment (expression has type "str | None", variable has type "str") 
[assignment]
        endpoint = os.environ.get('OPENAI__ENDPOINT') or os.environ.get('A...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:14: error:
Need type annotation for "steps_status" (hint:
"steps_status: dict[<type>, <type>] = ...")  [var-annotated]
            self.steps_status = {}
            ^~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:15: error:
Need type annotation for "steps_results" (hint:
"steps_results: dict[<type>, <type>] = ...")  [var-annotated]
            self.steps_results = {}
            ^~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:16: error:
Need type annotation for "steps_errors" (hint:
"steps_errors: dict[<type>, <type>] = ...")  [var-annotated]
            self.steps_errors = {}
            ^~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:17: error:
Need type annotation for "dependency_graph" (hint:
"dependency_graph: dict[<type>, <type>] = ...")  [var-annotated]
            self.dependency_graph = {}
            ^~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_manager.py:18: error:
Need type annotation for "_step_instances" (hint:
"_step_instances: dict[<type>, <type>] = ...")  [var-annotated]
            self._step_instances = {}
            ^~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_simple.py:18: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector(neo4j_env: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:164: error: Value of
type "Any | None" is not indexable  [index]
                assert constraint.get("labelsOrTypes")[0] == "File"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:165: error: Value of
type "Any | None" is not indexable  [index]
                assert constraint.get("properties")[0] == "path"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:167: error: Value of
type "Any | None" is not indexable  [index]
                assert constraint.get("labelsOrTypes")[0] == "Directory"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:168: error: Value of
type "Any | None" is not indexable  [index]
                assert constraint.get("properties")[0] == "path"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:174: error: Value of
type "Any | None" is not indexable  [index]
                assert index.get("labelsOrTypes")[0] == "File"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_graphdb/test_neo4j_integration.py:175: error: Value of
type "Any | None" is not indexable  [index]
                assert index.get("properties")[0] == "extension"
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_summarizer/utils/content_extractor.py:38: error: Returning Any
from function declared to return "dict[str, str | list[str]]"  [no-any-return]
                return self._extract_repository_content(node)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_summarizer/utils/content_extractor.py:40: error: Returning Any
from function declared to return "dict[str, str | list[str]]"  [no-any-return]
                return self._extract_directory_content(node)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_summarizer/utils/content_extractor.py:42: error: Returning Any
from function declared to return "dict[str, str | list[str]]"  [no-any-return]
                return self._extract_file_content(node)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_summarizer/utils/content_extractor.py:44: error: Returning Any
from function declared to return "dict[str, str | list[str]]"  [no-any-return]
                return self._extract_class_content(node)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_summarizer/utils/content_extractor.py:46: error: Returning Any
from function declared to return "dict[str, str | list[str]]"  [no-any-return]
                return self._extract_function_content(node)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/infrastructure/openai_adapter.py:175: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                messages = [ChatMessage(role='system', content='You are a ...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/infrastructure/msal_validator.py:56: error: Returning Any
from function declared to return "dict[str, Any]"  [no-any-return]
                    return claims
                    ^~~~~~~~~~~~~
src/codestory_service/infrastructure/msal_validator.py:62: error: Returning Any
from function declared to return "dict[str, Any]"  [no-any-return]
                    return claims
                    ^~~~~~~~~~~~~
src/codestory_service/application/config_service.py:50: error: Missing return
statement  [return]
        async def _init_redis(self: Any) -> None:
        ^
src/codestory_service/application/config_service.py:57: error: Name "attr" is
not defined  [name-defined]
                await self.redis.ping()[attr - defined]  # type: ignore[at...
                                        ^
src/codestory_service/application/config_service.py:57: note: Error code "name-defined" not covered by "type: ignore" comment
src/codestory_service/application/config_service.py:57: error: Name "defined"
is not defined  [name-defined]
                await self.redis.ping()[attr - defined]  # type: ignore[at...
                                               ^
src/codestory_service/application/config_service.py:180: error: Returning Any
from function declared to return "ConfigDump"  [no-any-return]
                return self.get_config_dump()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/auth/entra_validator.py:71: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return claims
                ^~~~~~~~~~~~~
src/codestory_mcp/auth/entra_validator.py:94: error: Name "scopes" already
defined on line 90  [no-redef]
                scopes: list[Any] = []
                ^
src/codestory_filesystem/step.py:12: error: Cannot find implementation or
library stub for module named "pathspec"  [import-not-found]
    import pathspec
    ^
src/codestory_filesystem/step.py:12: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
src/codestory_filesystem/step.py:206: error: Dict entry 1 has incompatible type
"str": "str"; expected "str": "StepStatus | None"  [dict-item]
    ...tus_info.update({'status': StepStatus.COMPLETED, 'message': status_msg...
                                                        ^~~~~~~~~~~~~~~~~~~~~
src/codestory_filesystem/step.py:206: error: Dict entry 2 has incompatible type
"str": "float"; expected "str": "StepStatus | None"  [dict-item]
    ...s': StepStatus.COMPLETED, 'message': status_msg, 'progress': 100.0, 'r...
                                                        ^~~~~~~~~~~~~~~~~
src/codestory_filesystem/step.py:210: error: Dict entry 1 has incompatible type
"str": "str"; expected "str": "StepStatus | None"  [dict-item]
    ...status_info.update({'status': StepStatus.FAILED, 'error': f'Error retr...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_filesystem/step.py:214: error: Dict entry 1 has incompatible type
"str": "str"; expected "str": "StepStatus | None"  [dict-item]
    ...status_info.update({'status': StepStatus.FAILED, 'error': str(result.r...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_filesystem/step.py:225: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
                return job_info
                ^~~~~~~~~~~~~~~
src/codestory_filesystem/step.py:230: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
                return job_info
                ^~~~~~~~~~~~~~~
src/codestory_filesystem/step.py:258: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
                return job_info
                ^~~~~~~~~~~~~~~
src/codestory_filesystem/step.py:263: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
                return job_info
                ^~~~~~~~~~~~~~~
src/codestory_filesystem/step.py:283: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
                return result
                ^~~~~~~~~~~~~
src/codestory_filesystem/step.py:289: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
                    return job_info
                    ^~~~~~~~~~~~~~~
src/codestory_filesystem/step.py:307: error: Returning Any from function
declared to return "str"  [no-any-return]
            return job_id
            ^~~~~~~~~~~~~
src/codestory_filesystem/step.py:309: error: Untyped decorator makes function
"process_filesystem" untyped  [misc]
    @shared_task(name='codestory_filesystem.step.process_filesystem', bind...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_filesystem/step.py:376: error: Unused "type: ignore" comment 
[unused-ignore]
                neo4j = Neo4jConnector(**params)  # type: ignore[assignmen...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_filesystem/step.py:376: error: Argument 1 to "Neo4jConnector" has
incompatible type "**dict[str, str]"; expected "bool"  [arg-type]
                neo4j = Neo4jConnector(**params)  # type: ignore[assignmen...
                                         ^~~~~~
src/codestory_filesystem/step.py:376: note: Error code "arg-type" not covered by "type: ignore" comment
src/codestory_filesystem/step.py:594: error: Value of type "object" is not
indexable  [index]
    ...ctory Operations ({dir_count} dirs):\n  - Total: {overall_timing_stats...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_filesystem/step.py:599: error: Value of type "object" is not
indexable  [index]
    ...nt': dir_count, 'performance': {'avg_file_time': overall_timing_stats[...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_filesystem/step.py:604: error: Value of type "object" is not
indexable  [index]
    ...on:.2f} seconds\n- Average Neo4j operation time: {overall_timing_stats...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
src/codestory_docgrapher/utils/path_matcher.py:54: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                return self.path_cache[path_reference]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:65: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                return matching_paths[0]
                ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:82: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                        return filtered_paths[0]
                        ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:86: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                        return shortest
                        ^~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:89: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                return shortest
                ^~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/path_matcher.py:95: error: Returning Any from
function declared to return "str | None"  [no-any-return]
                    return matching_paths[0]
                    ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:43: error: Returning Any
from function declared to return "dict[str, Any]"  [no-any-return]
                return self._analyze_heading(content)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:45: error: Returning Any
from function declared to return "dict[str, Any]"  [no-any-return]
                return self._analyze_code_block(content, entity.metadata.g...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_docgrapher/utils/content_analyzer.py:47: error: Returning Any
from function declared to return "dict[str, Any]"  [no-any-return]
                return self._analyze_function_desc(content)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:49: error: Returning Any
from function declared to return "dict[str, Any]"  [no-any-return]
                return self._analyze_class_desc(content)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:51: error: Returning Any
from function declared to return "dict[str, Any]"  [no-any-return]
                return self._analyze_module_desc(content)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:53: error: Returning Any
from function declared to return "dict[str, Any]"  [no-any-return]
                return self._analyze_generic(content)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:234: error: Returning Any
from function declared to return "str"  [no-any-return]
                return response.choices[0].message.content.strip()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:252: error: Returning Any
from function declared to return "str"  [no-any-return]
                return response.choices[0].message.content.strip()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/utils/content_analyzer.py:270: error: Returning Any
from function declared to return "str"  [no-any-return]
                return response.choices[0].message.content.strip()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_blarify/step.py:234: error: Returning Any from function declared
to return "dict[str, Any]"  [no-any-return]
            return result
            ^~~~~~~~~~~~~
src/codestory_blarify/step.py:254: error: Returning Any from function declared
to return "str"  [no-any-return]
            return self.run(repository_path, **config)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_blarify/step.py:256: error: Untyped decorator makes function
"run_blarify" untyped  [misc]
    @shared_task(bind=True, name='codestory_blarify.step.run_blarify')
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_blarify/step.py:301: error: Unpacking a string is disallowed 
[misc]
                    for host_path, container_path in os.environ.get('CODES...
                    ^
src/codestory_blarify/step.py:302: error: Cannot determine type of "host_path" 
[has-type]
                        if host_path and container_path and repository_pat...
                           ^~~~~~~~~
src/codestory_blarify/step.py:302: error: Cannot determine type of
"container_path"  [has-type]
                        if host_path and container_path and repository_pat...
                                         ^~~~~~~~~~~~~~
src/codestory_blarify/step.py:303: error: Cannot determine type of "host_path" 
[has-type]
    ...tainer_repository_path = repository_path.replace(host_path, container_...
                                                        ^~~~~~~~~
src/codestory_blarify/step.py:303: error: Cannot determine type of
"container_path"  [has-type]
    ...epository_path = repository_path.replace(host_path, container_path, 1)
                                                           ^~~~~~~~~~~~~~
src/codestory_blarify/step.py:404: error: Returning Any from function declared
to return "dict[str, Any]"  [no-any-return]
            return result
            ^~~~~~~~~~~~~
src/codestory/ingestion_pipeline/tasks.py:27: error: Untyped decorator makes
function "run_step" untyped  [misc]
    @app.task(name="codestory.ingestion_pipeline.tasks.run_step", bind=Tru...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/tasks.py:388: error: Untyped decorator makes
function "orchestrate_pipeline" untyped  [misc]
    @app.task(name="codestory.ingestion_pipeline.tasks.orchestrate_pipelin...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/ingestion_pipeline/tasks.py:607: error: Untyped decorator makes
function "get_job_status" untyped  [misc]
    @app.task(name="codestory.ingestion_pipeline.tasks.get_job_status", bi...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/ingestion_pipeline/tasks.py:647: error: Untyped decorator makes
function "stop_job" untyped  [misc]
    @app.task(name="codestory.ingestion_pipeline.tasks.stop_job", bind=Tru...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_config_writer.py:13: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def temp_env_file() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_config_writer.py:26: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def temp_toml_file() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/conftest.py:9: error: The return type of a generator function should
be "Generator" or one of its supertypes  [misc]
    def mock_settings() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_auth.py:62: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_jwks_client(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_auth.py:68: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_jwt(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_filesystem_ingestion_simple.py:17: error: The return
type of a generator function should be "Generator" or one of its supertypes 
[misc]
        def setup_and_cleanup(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_filesystem_ingestion_simple.py:85: error: Need type
annotation for "step_params"  [var-annotated]
            step_params = {'ignore_patterns': []}
                          ^~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:91: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:111: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:141: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
            result = custom_process_filesystem(repository_path=repository_...
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:182: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
            result = custom_process_filesystem(repository_path=repository_...
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_filesystem_integration.py:200: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
            result = custom_process_filesystem(repository_path=repository_...
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:26: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:44: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:247: error:
Statement is unreachable  [unreachable]
            return
            ^~~~~~
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:301: error:
Value of type "dict[str, Any] | None" is not indexable  [index]
            assert final_status['status'] in [StepStatus.STOPPED, StepStat...
                   ^~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_blarify_integration.py:302: error:
Value of type "dict[str, Any] | None" is not indexable  [index]
            if final_status['status'] == StepStatus.COMPLETED:
               ^~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/infrastructure/celery_adapter.py:103: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                            eta = datetime.fromtimestamp(int(request.eta))...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/infrastructure/celery_adapter.py:107: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                    countdown = int(request.countdown)  # type: ignore[arg...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/infrastructure/celery_adapter.py:208: error: Item
"list[JobStatus]" of "list[JobStatus] | None" has no attribute
"HTTP_500_INTERNAL_SERVER_ERROR"  [union-attr]
                raise HTTPException(status_code=status.HTTP_500_INTERNAL_S...
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/infrastructure/celery_adapter.py:208: error: Item "None"
of "list[JobStatus] | None" has no attribute "HTTP_500_INTERNAL_SERVER_ERROR" 
[union-attr]
                raise HTTPException(status_code=status.HTTP_500_INTERNAL_S...
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/application/graph_service.py:49: error: Returning Any
from function declared to return "QueryResult"  [no-any-return]
                return result
                ^~~~~~~~~~~~~
src/codestory_service/application/graph_service.py:76: error: Returning Any
from function declared to return "VectorResult"  [no-any-return]
                return result
                ^~~~~~~~~~~~~
src/codestory_service/application/graph_service.py:99: error: Returning Any
from function declared to return "PathResult"  [no-any-return]
                return result
                ^~~~~~~~~~~~~
src/codestory_service/application/graph_service.py:128: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                    node_query = CypherQuery(query='MATCH (n) WHERE elemen...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/application/graph_service.py:137: error: Returning Any
from function declared to return "AskAnswer"  [no-any-return]
                return answer
                ^~~~~~~~~~~~~
src/codestory_service/application/graph_service.py:161: error: Returning Any
from function declared to return "str"  [no-any-return]
                return html_content
                ^~~~~~~~~~~~~~~~~~~
src/codestory_service/application/graph_service.py:193: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
            query = CypherQuery(query=cypher_query, parameters=params, que...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/application/graph_service.py:270: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                delete_query = CypherQuery(query='MATCH (n) DETACH DELETE ...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/application/graph_service.py:274: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                    schema_query = CypherQuery(query='CALL apoc.schema.ass...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_mcp/adapters/openai_service.py:44: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                messages = [ChatMessage(role='system', content='You are a ...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_mcp/adapters/openai_service.py:46: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                    messages.append(ChatMessage(role='user', content=f'I n...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_mcp/adapters/openai_service.py:48: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                    messages.append(ChatMessage(role='user', content='Plea...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_mcp/adapters/openai_service.py:49: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                messages.append(ChatMessage(role='user', content=f'```\n{c...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_mcp/adapters/openai_service.py:55: error: Returning Any from
function declared to return "str"  [no-any-return]
                return summary
                ^~~~~~~~~~~~~~
src/codestory_mcp/adapters/openai_service.py:85: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                messages = [ChatMessage(role='system', content='You are a ...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_mcp/adapters/openai_service.py:91: error: Returning Any from
function declared to return "str"  [no-any-return]
                return explanation
                ^~~~~~~~~~~~~~~~~~
src/codestory_mcp/adapters/graph_service.py:175: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/adapters/graph_service.py:234: error: Returning Any from
function declared to return "None"  [no-any-return]
                return self.properties[key]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/adapters/graph_service.py:289: error: Returning Any from
function declared to return "None"  [no-any-return]
                return self.properties[key]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/entity_linker.py:145: error: Returning Any from
function declared to return "list[str]"  [no-any-return]
                return self.entity_cache[cache_key]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/manager.py:54: error: Returning Any from
function declared to return "type[PipelineStep] | None"  [no-any-return]
                return self.steps[step_name]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/manager.py:137: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
            return job_info
            ^~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/manager.py:159: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
            return job_info
            ^~~~~~~~~~~~~~~
src/codestory/ingestion_pipeline/manager.py:185: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
            return job_info
            ^~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:91: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                    return health_data
                    ^~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:100: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                    return health_data
                    ^~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:215: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return self._handle_error_package(data)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:252: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return self._handle_error_package(data)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:270: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return self._handle_error_package(data)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:289: error: Returning Any from
function declared to return "list[dict[str, Any]]"  [no-any-return]
                        return data['items']
                        ^~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:291: error: Returning Any from
function declared to return "list[dict[str, Any]]"  [no-any-return]
                        return data['jobs']
                        ^~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:336: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:354: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:374: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:391: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:405: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:419: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return response.json()
                ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:444: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                return health_data
                ^~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:495: error: Returning Any from
function declared to return "str"  [no-any-return]
                        return response.text
                        ^~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:538: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                    return response.json()
                    ^~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/client/service_client.py:542: error: Returning Any from
function declared to return "dict[str, Any]"  [no-any-return]
                    return response.json()
                    ^~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_ingestion_pipeline/test_manager.py:19: error: The return type
of a generator function should be "Generator" or one of its supertypes  [misc]
    def mock_prometheus_metrics() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_ingestion_pipeline/test_manager.py:32: error: The return type
of a generator function should be "Generator" or one of its supertypes  [misc]
        def config_file(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_ingestion_pipeline/test_manager.py:69: error: Cannot assign to
a method  [method-assign]
                manager._get_step_class = lambda name: mock_step_class if ...
                ^~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_ingestion_pipeline/test_manager.py:69: error: Incompatible
types in assignment (expression has type "Callable[[str], Any | None]", variable
has type "Callable[[str], type[PipelineStep] | None]")  [assignment]
                manager._get_step_class = lambda name: mock_step_class if ...
                                          ^
tests/unit/test_ingestion_pipeline/test_manager.py:74: error: Cannot assign to
a method  [method-assign]
                    manager._get_step_class = original_method
                    ^~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_infrastructure.py:78: error: Argument
"usage" to "EmbeddingResponse" has incompatible type "dict[str, int]"; expected
"UsageInfo"  [arg-type]
    ...ding_data, model='text-embedding-ada-002', usage={'prompt_tokens': 8, ...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_infrastructure.py:244: error:
"CeleryAdapter" has no attribute "_run_ingestion_pipeline"  [attr-defined]
            adapter._run_ingestion_pipeline = mock_app.tasks['run_ingestio...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_infrastructure.py:325: error:
Incompatible types in assignment (expression has type "str", variable has type
"None")  [assignment]
                validator.jwt_secret = 'test_secret'
                                       ^~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:82: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_settings(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:91: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_metrics(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:99: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_client(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:132: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:155: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:169: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:187: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:205: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:222: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:253: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_client(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:261: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def mock_metrics(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:292: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:315: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:333: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_adapters.py:357: error: Need type annotation
for "embed_future"  [var-annotated]
            embed_future = asyncio.Future()
                           ^~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:92: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:108: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:120: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def test_config() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:137: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
            result = custom_process_filesystem(repository_path=repository_...
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_pipeline_integration.py:188: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
            result = custom_process_filesystem(repository_path=repository_...
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_summarizer/step.py:153: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
            return result
            ^~~~~~~~~~~~~
src/codestory_summarizer/step.py:173: error: Returning Any from function
declared to return "str"  [no-any-return]
            return self.run(repository_path, **config)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_summarizer/step.py:175: error: Untyped decorator makes function
"run_summarizer" untyped  [misc]
    @shared_task(bind=True, name='codestory_summarizer.step.run_summarizer...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/use_real_adapters.py:110: error: Incompatible types in
assignment (expression has type
"Callable[[], Coroutine[Any, Any, OpenAIAdapter]]", variable has type
"Callable[[], OpenAIAdapter]")  [assignment]
        openai_adapter.get_openai_adapter = get_real_openai_adapter  # TOD...
                                            ^~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/ingestion_service.py:34: error: Missing
return statement  [return]
        async def _init_redis(self: Any) -> None:
        ^
src/codestory_service/application/ingestion_service.py:41: error: Name "attr"
is not defined  [name-defined]
                await self.redis.ping()[attr - defined]  # type: ignore[at...
                                        ^
src/codestory_service/application/ingestion_service.py:41: note: Error code "name-defined" not covered by "type: ignore" comment
src/codestory_service/application/ingestion_service.py:41: error: Name
"defined" is not defined  [name-defined]
                await self.redis.ping()[attr - defined]  # type: ignore[at...
                                               ^
src/codestory_service/application/ingestion_service.py:140: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                    initial_event = JobProgressEvent(job_id=ingestion_star...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/application/ingestion_service.py:142: error: Returning
Any from function declared to return "IngestionStarted"  [no-any-return]
                    return ingestion_started
                    ^~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_service/application/ingestion_service.py:166: error: Returning
Any from function declared to return "IngestionJob"  [no-any-return]
                return job
                ^~~~~~~~~~
src/codestory_service/application/ingestion_service.py:189: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                cancel_event = JobProgressEvent(job_id=job_id, step=job.cu...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/application/ingestion_service.py:191: error: Returning
Any from function declared to return "IngestionJob"  [no-any-return]
                return job
                ^~~~~~~~~~
src/codestory_service/application/ingestion_service.py:223: error: Item
"list[JobStatus]" of "list[JobStatus] | None" has no attribute
"HTTP_500_INTERNAL_SERVER_ERROR"  [union-attr]
                raise HTTPException(status_code=status.HTTP_500_INTERNAL_S...
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/application/ingestion_service.py:223: error: Item "None"
of "list[JobStatus] | None" has no attribute "HTTP_500_INTERNAL_SERVER_ERROR" 
[union-attr]
                raise HTTPException(status_code=status.HTTP_500_INTERNAL_S...
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/application/ingestion_service.py:259: error: Function is
missing a return type annotation  [no-untyped-def]
            def summary_stats(values: Any):
            ^
src/codestory_service/api/health.py:247: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        async def check_component_health(component_name, check_func, timeo...
        ^
src/codestory_service/api/health.py:250: error: Returning Any from function
declared to return "None"  [no-any-return]
                return result
                ^~~~~~~~~~~~~
src/codestory_service/api/health.py:278: error: Function does not return a
value (it only ever returns None)  [func-returns-value]
            redis_health = await asyncio.wait_for(check_redis_health(), ti...
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/health.py:286: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
        components = {'neo4j': ComponentHealth(**neo4j_health), 'celery': ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/auth.py:92: error: Returning Any from function
declared to return "UserInfo"  [no-any-return]
            return UserInfo(id="anonymous", name="Anonymous User", roles=[...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/auth.py:92: note: Error code "no-any-return" not covered by "type: ignore" comment
src/codestory_service/api/auth.py:92: error: Value of type "UserInfo" is not
indexable  [index]
            return UserInfo(id="anonymous", name="Anonymous User", roles=[...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_service/api/auth.py:92: note: Error code "index" not covered by "type: ignore" comment
src/codestory_service/api/auth.py:92: error: Name "call" is not defined 
[name-defined]
    ...onymous User", roles=[], is_authenticated=False)[call-arg]  # type: ig...
                                                        ^
src/codestory_service/api/auth.py:92: note: Error code "name-defined" not covered by "type: ignore" comment
src/codestory_service/api/auth.py:92: error: Name "arg" is not defined 
[name-defined]
    ...us User", roles=[], is_authenticated=False)[call-arg]  # type: ignore[...
                                                        ^
src/codestory_mcp/server.py:48: error: Unused "type: ignore[assignment]"
comment  [unused-ignore]
            validator = EntraValidator(settings.azure_tenant_id, settings....
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory_mcp/server.py:96: error: Unused "type: ignore" comment 
[unused-ignore]
    @asynccontextmanager  # type: ignore[assignment]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/server.py:96: error: Argument 1 to "asynccontextmanager" has
incompatible type "Callable[[FastAPI], None]"; expected
"Callable[[FastAPI], AsyncIterator[Never]]"  [arg-type]
    @asynccontextmanager  # type: ignore[assignment]
     ^
src/codestory_mcp/server.py:96: note: Error code "arg-type" not covered by "type: ignore" comment
src/codestory_mcp/server.py:97: error: The return type of an async generator
function should be "AsyncGenerator" or one of its supertypes  [misc]
    async def lifespan(app: FastAPI) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/server.py:123: error: Missing return statement  [empty-body]
        async def execute_tool(tool_name: str, params: dict[str, Any], use...
        ^
tests/unit/test_codestory_service/test_application.py:86: error: Incompatible
types in assignment (expression has type "AsyncMock", variable has type "None") 
[assignment]
            service.redis = mock.AsyncMock()
                            ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_application.py:118: error: List item 0
has incompatible type "dict[str, object]"; expected "ConfigPatchItem" 
[list-item]
            patch = ConfigPatch(items=[{'key': 'general.debug', 'value': F...
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_application.py:192: error: Incompatible
types in assignment (expression has type "AsyncMock", variable has type "None") 
[assignment]
            service.redis = mock.AsyncMock()
                            ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:27: error: Only concrete class can
be given where "type[BaseTool]" is expected  [type-abstract]
            registered = register_tool(MockTool)
                                       ^~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:54: error: Only concrete class can
be given where "type[BaseTool]" is expected  [type-abstract]
            register_tool(MockTool1)
                          ^~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:55: error: Only concrete class can
be given where "type[BaseTool]" is expected  [type-abstract]
            register_tool(MockTool2)
                          ^~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:64: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def graph_service(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:72: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def metrics(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:123: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:142: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:154: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def graph_service(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:162: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def openai_service(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:170: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def metrics(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:204: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:219: error: Need type annotation
for "find_node_future"  [var-annotated]
            find_node_future = asyncio.Future()
                               ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:222: error: Need type annotation
for "summary_future"  [var-annotated]
            summary_future = asyncio.Future()
                             ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:239: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def graph_service(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:247: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def openai_service(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:255: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def metrics(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:339: error: Need type annotation
for "paths_future"  [var-annotated]
            paths_future = asyncio.Future()
                           ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:342: error: Need type annotation
for "explanation_future"  [var-annotated]
            explanation_future = asyncio.Future()
                                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:362: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def openai_service(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:370: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
        def metrics(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_tools.py:402: error: Need type annotation
for "future"  [var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:11: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def mock_settings() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:27: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def mock_metrics() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:35: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def mock_entra_validator() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:43: error: The return type of a
generator function should be "Generator" or one of its supertypes  [misc]
    def mock_tool() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:81: error: Need type annotation
for "future"  [var-annotated]
        future = asyncio.Future()
                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:96: error: Need type annotation
for "future"  [var-annotated]
        future = asyncio.Future()
                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:109: error: Need type annotation
for "future"  [var-annotated]
        future = asyncio.Future()
                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:137: error: Need type annotation
for "future"  [var-annotated]
        future = asyncio.Future()
                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:165: error: Need type annotation
for "future"  [var-annotated]
        future = asyncio.Future()
                 ^~~~~~~~~~~~~~~~
tests/unit/test_codestory_mcp/test_server.py:185: error: "BaseRoute" has no
attribute "path"  [attr-defined]
            route_paths = [route.path for route in app.routes]
                           ^~~~~~~~~~
tests/integration/test_mcp.py:19: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def client() -> None:
    ^~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:84: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def mock_llm_client() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:110: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:130: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:141: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
        result = custom_process_filesystem(repository_path=sample_repo, jo...
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:150: error:
Value of type "Any | None" is not indexable  [index]
            class_id = class_result['id']
                       ^~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_summarizer_integration.py:276: error:
"custom_process_filesystem" does not return a value (it only ever returns None) 
[func-returns-value]
        fs_result = custom_process_filesystem(repository_path=initialized_...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:186: error:
Cannot assign to a method  [method-assign]
            manager.status = mock_status
            ^~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:309: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += fs_status["progress"] * fs_weight
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:313: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += blarify_status["progress"] * blarif...
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:317: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += summarizer_status["progress"] * sum...
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:356: error:
Cannot assign to a method  [method-assign]
        pipeline_manager.status = calculate_pipeline_progress
        ^~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:520: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += fs_status["progress"] * fs_weight
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:524: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += blarify_status["progress"] * blarif...
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:528: error:
Unsupported operand types for * ("object" and "float")  [operator]
                    active_progress += summarizer_status["progress"] * sum...
                                       ^
tests/integration/test_ingestion_pipeline/test_progress_tracking.py:567: error:
Cannot assign to a method  [method-assign]
        pipeline_manager.status = calculate_pipeline_progress
        ^~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/main.py:53: error: Unused "type: ignore" comment 
[unused-ignore]
            foreign_pre_chain=pre_chain,  # type: ignore[assignment]
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_mcp/main.py:53: error: Argument "foreign_pre_chain" to
"ProcessorFormatter" has incompatible type "list[object]"; expected
"Sequence[Callable[[Any, str, MutableMapping[str, Any]], Mapping[str, Any] | str | bytes | bytearray | tuple[Any, ...]]] | None"
 [arg-type]
            foreign_pre_chain=pre_chain,  # type: ignore[assignment]
                              ^~~~~~~~~
src/codestory_mcp/main.py:53: note: Error code "arg-type" not covered by "type: ignore" comment
src/codestory_docgrapher/step.py:147: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
            return result
            ^~~~~~~~~~~~~
src/codestory_docgrapher/step.py:164: error: Returning Any from function
declared to return "str"  [no-any-return]
            return self.run(repository_path, **config)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory_docgrapher/step.py:166: error: Untyped decorator makes function
"run_docgrapher" untyped  [misc]
    @shared_task(bind=True, name='codestory_docgrapher.step.run_docgrapher...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_codestory_service/test_api.py:133: error: List item 0 has
incompatible type "dict[str, object]"; expected "ConfigPatchItem"  [list-item]
            patch = ConfigPatch(items=[{'key': 'general.debug', 'value': F...
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_service_client.py:170: error: Cannot assign to a
method  [method-assign]
            client.execute_query = MagicMock()
            ^~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_service_client.py:184: error: Cannot assign to a
method  [method-assign]
            client.execute_query = MagicMock()
            ^~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_service_client.py:192: error: Cannot assign to a
method  [method-assign]
            client.execute_query = MagicMock()
            ^~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_service_client.py:201: error: Cannot assign to a
method  [method-assign]
            client.execute_query = MagicMock()
            ^~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_step_dependencies.py:235: error:
Statement is unreachable  [unreachable]
            waiting_key = f'codestory:ingestion:waiting:{job_b_id}'
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_docgrapher_integration.py:22: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def sample_repo() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_docgrapher_integration.py:37: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_docgrapher_integration.py:77: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
    def mock_llm_client() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/base_pipeline_test.py:18: error: The
return type of a generator function should be "Generator" or one of its
supertypes  [misc]
        def setup_test_env(self: Any, neo4j_connector: Any, redis_client: ...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_codestory_service/test_clear_database.py:20: error: The return
type of a generator function should be "Generator" or one of its supertypes 
[misc]
    def test_client(mock_graph_service: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_service.py:18: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def test_client() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_config_api.py:18: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def neo4j_connector() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_config_api.py:32: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def test_client(neo4j_connector: Any) -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_config_api.py:53: error: Argument 1 to
"asynccontextmanager" has incompatible type "Callable[[Any], None]"; expected
"Callable[[Any], AsyncIterator[Never]]"  [arg-type]
        @asynccontextmanager
         ^
tests/integration/test_config_api.py:54: error: The return type of an async
generator function should be "AsyncGenerator" or one of its supertypes  [misc]
        async def test_lifespan(app) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_ingestion_pipeline/test_full_pipeline_integration.py:19: error:
The return type of a generator function should be "Generator" or one of its
supertypes  [misc]
        def setup_pipeline_manager(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/service.py:16: error: Name "click" already defined
(by an import)  [no-redef]
        import click
        ^
src/codestory/cli/commands/service.py:627: error: Incompatible types in
assignment (expression has type "CompletedProcess[str]", variable has type
"CompletedProcess[bytes]")  [assignment]
                    process = subprocess.run(  # TODO: Fix type compatibil...
                              ^
src/codestory/cli/commands/service.py:642: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                            c for c in process.stdout.strip().split("\n") ...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/cli/commands/service.py:835: error: Incompatible types in
assignment (expression has type "CompletedProcess[str]", variable has type
"CompletedProcess[bytes]")  [assignment]
                    process = subprocess.run(  # TODO: Fix type compatibil...
                              ^
src/codestory/cli/commands/service.py:853: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                            error_lines = process.stderr.strip().split("\n...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/cli/commands/service.py:856: error: If x = b'abc' then f"{x}" or
"{}".format(x) produces "b'abc'", not "abc". If this is desired behavior, use
f"{x!r}" or "{!r}".format(x). Otherwise, decode the bytes  [str-bytes-safe]
                                console.print(f"  {line}")
                                                  ^~~~~~
src/codestory/cli/commands/service.py:993: error: Incompatible types in
assignment (expression has type "CompletedProcess[str]", variable has type
"CompletedProcess[bytes]")  [assignment]
                    process = subprocess.run(  # TODO: Fix type compatibil...
                              ^
src/codestory/cli/commands/service.py:1010: error: Unused
"type: ignore[assignment]" comment  [unused-ignore]
                            error_lines = process.stderr.strip().split("\n...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/cli/commands/service.py:1013: error: If x = b'abc' then f"{x}" or
"{}".format(x) produces "b'abc'", not "abc". If this is desired behavior, use
f"{x!r}" or "{!r}".format(x). Otherwise, decode the bytes  [str-bytes-safe]
                                console.print(f"  {line}")
                                                  ^~~~~~
src/codestory/cli/commands/ingest.py:158: error: "is_docker_running" does not
return a value (it only ever returns None)  [func-returns-value]
        if not is_docker_running():
               ^~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:165: error: "is_repo_mounted" does not
return a value (it only ever returns None)  [func-returns-value]
        if not force_remount and is_repo_mounted(repo_path, console):
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:177: error: "is_repo_mounted" does not
return a value (it only ever returns None)  [func-returns-value]
        verification = is_repo_mounted(repo_path, console)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:239: error: "is_repo_mounted" does not
return a value (it only ever returns None)  [func-returns-value]
            is_mounted = is_repo_mounted(local_path)
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:256: error: "is_repo_mounted" does not
return a value (it only ever returns None)  [func-returns-value]
            elif not is_repo_mounted(local_path, console):
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:302: error: Statement is unreachable 
[unreachable]
                    console.print(f"[yellow]Warning: --eta value '{eta}' i...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/codestory/cli/commands/ingest.py:430: error: "is_docker_running" does not
return a value (it only ever returns None)  [func-returns-value]
            is_docker = is_docker_running()
                        ^~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:438: error: "is_repo_mounted" does not
return a value (it only ever returns None)  [func-returns-value]
        if not force_remount and is_repo_mounted(local_path, console):
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/commands/ingest.py:441: error: "setup_repository_mount" does
not return a value (it only ever returns None)  [func-returns-value]
        if setup_repository_mount(local_path, console, force_remount):
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_commands/test_repository_mounting.py:31: error:
"is_repo_mounted" does not return a value (it only ever returns None) 
[func-returns-value]
                result = ingest.is_repo_mounted('/test/repo', console=None...
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_commands/test_repository_mounting.py:36: error:
"is_repo_mounted" does not return a value (it only ever returns None) 
[func-returns-value]
                    result = ingest.is_repo_mounted('/test/repo', console=...
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_commands/test_repository_mounting.py:51: error:
"setup_repository_mount" does not return a value (it only ever returns None) 
[func-returns-value]
                                        result = ingest.setup_repository_m...
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_commands/test_repository_mounting.py:69: error:
"setup_repository_mount" does not return a value (it only ever returns None) 
[func-returns-value]
                                        result = ingest.setup_repository_m...
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_commands/test_repository_mounting.py:84: error:
"create_override_file" does not return a value (it only ever returns None) 
[func-returns-value]
                    result = ingest.create_override_file(temp_dir, console...
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_repository_mounting.py:14: error: The return
type of a generator function should be "Generator" or one of its supertypes 
[misc]
    def temp_repository() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_repository_mounting.py:29: error: The return
type of a generator function should be "Generator" or one of its supertypes 
[misc]
    def stop_containers() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_repository_mounting.py:114: error: "IO[str]"
has no attribute "getvalue"  [attr-defined]
                output = console.file.getvalue()
                         ^~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/main.py:35: error: Returning Any from function declared to
return "None"  [no-any-return]
                return super().__call__(*args, **kwargs)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/main.py:116: error: Returning Any from function declared to
return "None"  [no-any-return]
                return original_main(*args, **kwargs)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/main.py:175: error: Cannot assign to a method 
[method-assign]
            click.exceptions.UsageError.show = custom_error_callback
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/codestory/cli/main.py:185: error: Cannot assign to a method 
[method-assign]
            click.exceptions.UsageError.show = original_error_callback
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_main.py:10: error: Argument 1 to "contextmanager" has
incompatible type "Callable[[], None]"; expected "Callable[[], Iterator[Never]]"
 [arg-type]
    @contextmanager
     ^
tests/unit/test_cli/test_main.py:11: error: The return type of a generator
function should be "Generator" or one of its supertypes  [misc]
    def custom_error_handler() -> None:
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_main.py:15: error: Cannot assign to a method 
[method-assign]
            click.Context.fail = MagicMock()
            ^~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_main.py:18: error: Cannot assign to a method 
[method-assign]
            click.Context.fail = original_error_callback
            ^~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_main.py:118: error: Statement is unreachable 
[unreachable]
                click.Context.fail.assert_called_once_with(mock_ctx, 'Some...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_main.py:119: error: Statement is unreachable 
[unreachable]
            assert click.Context.fail == original_fail
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_commands/test_ingest.py:136: error: "is_repo_mounted"
does not return a value (it only ever returns None)  [func-returns-value]
                result = ingest.is_repo_mounted('/fake/repo', mock_console...
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_commands/test_ingest.py:147: error: "is_repo_mounted"
does not return a value (it only ever returns None)  [func-returns-value]
                result = ingest.is_repo_mounted('/fake/repo', mock_console...
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/unit/test_cli/test_commands/test_ingest.py:166: error:
"setup_repository_mount" does not return a value (it only ever returns None) 
[func-returns-value]
                                        result = ingest.setup_repository_m...
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~...
tests/unit/test_cli/test_commands/test_ingest.py:181: error:
"setup_repository_mount" does not return a value (it only ever returns None) 
[func-returns-value]
                                        result = ingest.setup_repository_m...
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~...
tests/integration/test_filesystem_ingestion_e2e.py:175: error: Function
"builtins.any" is not valid as a type  [valid-type]
    ...e_graph_structure(self: Any, repository_path: Path) -> Dict[str, any]:
                                                                        ^
tests/integration/test_filesystem_ingestion_e2e.py:175: note: Perhaps you meant "typing.Any" instead of "any"?
tests/integration/test_filesystem_ingestion_e2e.py:189: error: Unsupported
operand types for + ("object" and "int")  [operator]
                        validation_results['file_nodes'] += 1
                        ^
tests/integration/test_filesystem_ingestion_e2e.py:193: error: Unsupported
operand types for + ("object" and "int")  [operator]
                        validation_results['directory_nodes'] += 1
                        ^
tests/integration/test_filesystem_ingestion_e2e.py:197: error: Unsupported
operand types for + ("object" and "int")  [operator]
                        validation_results['repository_nodes'] += 1
                        ^
tests/integration/test_filesystem_ingestion_e2e.py:212: error: "object" has no
attribute "append"  [attr-defined]
                        validation_results['ignored_files_present'].append...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_filesystem_ingestion_e2e.py:225: error: "object" has no
attribute "append"  [attr-defined]
                validation_results['errors'].append(f'Graph validation fai...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_filesystem_ingestion_e2e.py:254: error: The return type
of an async generator function should be "AsyncGenerator" or one of its
supertypes  [misc]
        async def setup_and_cleanup(self: Any) -> None:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_ingest_integration.py:97: error:
"is_docker_running" does not return a value (it only ever returns None) 
[func-returns-value]
            if not is_docker_running():
                   ^~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_ingest_integration.py:105: error:
"is_repo_mounted" does not return a value (it only ever returns None) 
[func-returns-value]
                assert is_repo_mounted(temp_dir)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_ingest_integration.py:111: error:
"is_docker_running" does not return a value (it only ever returns None) 
[func-returns-value]
            if not is_docker_running():
                   ^~~~~~~~~~~~~~~~~~~
tests/integration/test_cli/test_ingest_integration.py:120: error:
"is_repo_mounted" does not return a value (it only ever returns None) 
[func-returns-value]
                assert is_repo_mounted(temp_dir)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
Found 453 errors in 98 files (checked 226 source files)
