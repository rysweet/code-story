services:
  neo4j:
    image: neo4j:5.18.0-enterprise
    container_name: codestory-neo4j
    ports:
      - "7476:7474"  # HTTP - using different port to avoid conflicts
      - "7689:7687"  # Bolt - using different port to avoid conflicts
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=512m
      - NEO4J_initial_dbms_default__database=neo4j
      - NEO4J_server_config_strict__validation_enabled=false
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes  # Required for enterprise edition
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  redis:
    image: redis:7.2.4-alpine
    container_name: codestory-redis
    command: ["redis-server", "--port", "6380"]
    ports:
      - "6380:6380"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6380", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  # Add a real Celery worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: codestory-worker
    volumes:
      # Mount for repositories to be ingested - modify this path for your environment
      # Default mount for all repositories
      - ${REPOSITORY_PATH:-~/repositories}:/repositories
      # Specific repository mount for ingestion when set
      - ${REPOSITORY_SOURCE:-$HOME/repositories}:${REPOSITORY_DEST:-/repositories}
      # Mount Azure credentials for worker to access Azure OpenAI
      - ~/.azure:/root/.azure
    env_file:
      - .env
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "celery -A codestory.ingestion_pipeline.celery_app inspect ping || celery -A codestory.ingestion_pipeline.celery_app inspect ping -d celery@$$(hostname) || exit 1"]
      interval: 15s
      timeout: 15s
      retries: 15
      start_period: 180s
      
  service:
    build:
      context: .
      dockerfile: Dockerfile.service
    container_name: codestory-service
    ports:
      - "8000:8000"
    volumes:
      # Mount for repositories to be ingested - modify this path for your environment
      # Default mount for all repositories
      - ${REPOSITORY_PATH:-~/repositories}:/repositories
      # Specific repository mount for ingestion when set
      - ${REPOSITORY_SOURCE:-$HOME/repositories}:${REPOSITORY_DEST:-/repositories}
      # Mount Azure credentials
      - ~/.azure:/root/.azure
    env_file:
      - .env
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      worker:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "-c", "curl -f http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  redis_data: